# import User, Content, DateTime, Payment, Edition, File from "generated/prisma.graphql"
# import * from "types/user.graphql"
# import * from "types/journal.graphql"
# import * from "types/admin.graphql"
# import * from "types/payment.graphql"

scalar Upload

type Query {
  user: User
  users: [User]
  admins: [User]
  payments: [Payment]
  editions: [Edition]
  edition(editionKey: String!): Edition
  content: Content
  payedArticles: [Article]
  uploads: [File]
}

type Mutation {
  signup(email: String!, password: String!, cart: String): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  subscribe: Boolean
  unsubscribe: Boolean
  updateUser(input: UserInput): User
  updateUsersRoles(userIds: [ID] role: Role!): Int
  createArticle(input: ArticleInput): Article
  publishArticle(articleId: ID!): Article
  deleteArticle(articleId: ID!): Article
  payment(input: PaymentInput): Payment
  createEdition(input: EditionInput!): Edition
  publishEdition(editionId: ID!): Edition
  publishEditionCall(editionId: ID!): Edition
  updateEdition(editionId: ID! input: EditionUpdateInput!): Edition
  deleteEdition(editionId: ID!): Edition
  selectEditorial(articleId: ID! editionId: ID!): Edition
  unselectEditorial(articleId: ID! editionId: ID!): Edition
  selectArticles(articleIds: [ID]! editionId: ID!): Edition
  unselectArticles(articleIds: [ID]! editionId: ID!): Edition
  uploadFile(file: Upload!): File!
}
