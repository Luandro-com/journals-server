# source: http://localhost:4466
# timestamp: Sun Dec 09 2018 19:16:24 GMT-0200 (-02)

type AggregateArticle {
  count: Int!
}

type AggregateCitation {
  count: Int!
}

type AggregateContent {
  count: Int!
}

type AggregateCreditCard {
  count: Int!
}

type AggregateCupom {
  count: Int!
}

type AggregateFile {
  count: Int!
}

type AggregateIssue {
  count: Int!
}

type AggregateNewsletterSubscription {
  count: Int!
}

type AggregatePayment {
  count: Int!
}

type AggregateResetPasswordRequest {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Article implements Node {
  id: ID!
  title: String
  resume: String
  author: User!
  shortDescription: String
  published: Boolean
  file: File
  keyWords: [String!]!
  citations(where: CitationWhereInput, orderBy: CitationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Citation!]
  issue: Issue!
  selectedBy(where: IssueWhereInput, orderBy: IssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Issue!]
  editorial(where: IssueWhereInput, orderBy: IssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Issue!]
  createdAt: DateTime!
  updatedAt: DateTime!
  payment: Payment
}

"""A connection to a list of items."""
type ArticleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ArticleEdge]!
  aggregate: AggregateArticle!
}

input ArticleCreateInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
  payment: PaymentCreateOneWithoutArticleInput
}

input ArticleCreatekeyWordsInput {
  set: [String!]
}

input ArticleCreateManyWithoutAuthorInput {
  create: [ArticleCreateWithoutAuthorInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateManyWithoutEditorialInput {
  create: [ArticleCreateWithoutEditorialInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateManyWithoutIssueInput {
  create: [ArticleCreateWithoutIssueInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateManyWithoutSelectedByInput {
  create: [ArticleCreateWithoutSelectedByInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateOneWithoutCitationsInput {
  create: ArticleCreateWithoutCitationsInput
  connect: ArticleWhereUniqueInput
}

input ArticleCreateOneWithoutPaymentInput {
  create: ArticleCreateWithoutPaymentInput
  connect: ArticleWhereUniqueInput
}

input ArticleCreateWithoutAuthorInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
  payment: PaymentCreateOneWithoutArticleInput
}

input ArticleCreateWithoutCitationsInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
  payment: PaymentCreateOneWithoutArticleInput
}

input ArticleCreateWithoutEditorialInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  payment: PaymentCreateOneWithoutArticleInput
}

input ArticleCreateWithoutIssueInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
  payment: PaymentCreateOneWithoutArticleInput
}

input ArticleCreateWithoutPaymentInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  selectedBy: IssueCreateManyWithoutSelectedArticlesInput
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
}

input ArticleCreateWithoutSelectedByInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleCreatekeyWordsInput
  author: UserCreateOneWithoutArticlesInput!
  file: FileCreateOneInput
  citations: CitationCreateManyWithoutArticleInput
  issue: IssueCreateOneWithoutSubmitedArticlesInput!
  editorial: IssueCreateManyWithoutSelectedEditorialsInput
  payment: PaymentCreateOneWithoutArticleInput
}

"""An edge in a connection."""
type ArticleEdge {
  """The item at the end of the edge."""
  node: Article!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ArticleOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  resume_ASC
  resume_DESC
  shortDescription_ASC
  shortDescription_DESC
  published_ASC
  published_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ArticlePreviousValues {
  id: ID!
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ArticleScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  resume: String

  """All values that are not equal to given value."""
  resume_not: String

  """All values that are contained in given list."""
  resume_in: [String!]

  """All values that are not contained in given list."""
  resume_not_in: [String!]

  """All values less than the given value."""
  resume_lt: String

  """All values less than or equal the given value."""
  resume_lte: String

  """All values greater than the given value."""
  resume_gt: String

  """All values greater than or equal the given value."""
  resume_gte: String

  """All values containing the given string."""
  resume_contains: String

  """All values not containing the given string."""
  resume_not_contains: String

  """All values starting with the given string."""
  resume_starts_with: String

  """All values not starting with the given string."""
  resume_not_starts_with: String

  """All values ending with the given string."""
  resume_ends_with: String

  """All values not ending with the given string."""
  resume_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ArticleSubscriptionPayload {
  mutation: MutationType!
  node: Article
  updatedFields: [String!]
  previousValues: ArticlePreviousValues
}

input ArticleSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ArticleWhereInput
}

input ArticleUpdateInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdatekeyWordsInput {
  set: [String!]
}

input ArticleUpdateManyDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
}

input ArticleUpdateManyMutationInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
}

input ArticleUpdateManyWithoutAuthorInput {
  create: [ArticleCreateWithoutAuthorInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ArticleUpdateManyWithWhereNestedInput!]
  deleteMany: [ArticleScalarWhereInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ArticleUpdateManyWithoutEditorialInput {
  create: [ArticleCreateWithoutEditorialInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutEditorialInput!]
  updateMany: [ArticleUpdateManyWithWhereNestedInput!]
  deleteMany: [ArticleScalarWhereInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutEditorialInput!]
}

input ArticleUpdateManyWithoutIssueInput {
  create: [ArticleCreateWithoutIssueInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutIssueInput!]
  updateMany: [ArticleUpdateManyWithWhereNestedInput!]
  deleteMany: [ArticleScalarWhereInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutIssueInput!]
}

input ArticleUpdateManyWithoutSelectedByInput {
  create: [ArticleCreateWithoutSelectedByInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutSelectedByInput!]
  updateMany: [ArticleUpdateManyWithWhereNestedInput!]
  deleteMany: [ArticleScalarWhereInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutSelectedByInput!]
}

input ArticleUpdateManyWithWhereNestedInput {
  where: ArticleScalarWhereInput!
  data: ArticleUpdateManyDataInput!
}

input ArticleUpdateOneRequiredWithoutCitationsInput {
  create: ArticleCreateWithoutCitationsInput
  connect: ArticleWhereUniqueInput
  update: ArticleUpdateWithoutCitationsDataInput
  upsert: ArticleUpsertWithoutCitationsInput
}

input ArticleUpdateOneRequiredWithoutPaymentInput {
  create: ArticleCreateWithoutPaymentInput
  connect: ArticleWhereUniqueInput
  update: ArticleUpdateWithoutPaymentDataInput
  upsert: ArticleUpsertWithoutPaymentInput
}

input ArticleUpdateWithoutAuthorDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdateWithoutCitationsDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdateWithoutEditorialDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdateWithoutIssueDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdateWithoutPaymentDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  selectedBy: IssueUpdateManyWithoutSelectedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
}

input ArticleUpdateWithoutSelectedByDataInput {
  title: String
  resume: String
  shortDescription: String
  published: Boolean
  keyWords: ArticleUpdatekeyWordsInput
  author: UserUpdateOneRequiredWithoutArticlesInput
  file: FileUpdateOneInput
  citations: CitationUpdateManyWithoutArticleInput
  issue: IssueUpdateOneRequiredWithoutSubmitedArticlesInput
  editorial: IssueUpdateManyWithoutSelectedEditorialsInput
  payment: PaymentUpdateOneWithoutArticleInput
}

input ArticleUpdateWithWhereUniqueWithoutAuthorInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutAuthorDataInput!
}

input ArticleUpdateWithWhereUniqueWithoutEditorialInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutEditorialDataInput!
}

input ArticleUpdateWithWhereUniqueWithoutIssueInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutIssueDataInput!
}

input ArticleUpdateWithWhereUniqueWithoutSelectedByInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutSelectedByDataInput!
}

input ArticleUpsertWithoutCitationsInput {
  update: ArticleUpdateWithoutCitationsDataInput!
  create: ArticleCreateWithoutCitationsInput!
}

input ArticleUpsertWithoutPaymentInput {
  update: ArticleUpdateWithoutPaymentDataInput!
  create: ArticleCreateWithoutPaymentInput!
}

input ArticleUpsertWithWhereUniqueWithoutAuthorInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutAuthorDataInput!
  create: ArticleCreateWithoutAuthorInput!
}

input ArticleUpsertWithWhereUniqueWithoutEditorialInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutEditorialDataInput!
  create: ArticleCreateWithoutEditorialInput!
}

input ArticleUpsertWithWhereUniqueWithoutIssueInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutIssueDataInput!
  create: ArticleCreateWithoutIssueInput!
}

input ArticleUpsertWithWhereUniqueWithoutSelectedByInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutSelectedByDataInput!
  create: ArticleCreateWithoutSelectedByInput!
}

input ArticleWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  resume: String

  """All values that are not equal to given value."""
  resume_not: String

  """All values that are contained in given list."""
  resume_in: [String!]

  """All values that are not contained in given list."""
  resume_not_in: [String!]

  """All values less than the given value."""
  resume_lt: String

  """All values less than or equal the given value."""
  resume_lte: String

  """All values greater than the given value."""
  resume_gt: String

  """All values greater than or equal the given value."""
  resume_gte: String

  """All values containing the given string."""
  resume_contains: String

  """All values not containing the given string."""
  resume_not_contains: String

  """All values starting with the given string."""
  resume_starts_with: String

  """All values not starting with the given string."""
  resume_not_starts_with: String

  """All values ending with the given string."""
  resume_ends_with: String

  """All values not ending with the given string."""
  resume_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: UserWhereInput
  file: FileWhereInput
  citations_every: CitationWhereInput
  citations_some: CitationWhereInput
  citations_none: CitationWhereInput
  issue: IssueWhereInput
  selectedBy_every: IssueWhereInput
  selectedBy_some: IssueWhereInput
  selectedBy_none: IssueWhereInput
  editorial_every: IssueWhereInput
  editorial_some: IssueWhereInput
  editorial_none: IssueWhereInput
  payment: PaymentWhereInput
}

input ArticleWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Citation implements Node {
  id: ID!
  article: Article!
  text: String!
}

"""A connection to a list of items."""
type CitationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CitationEdge]!
  aggregate: AggregateCitation!
}

input CitationCreateInput {
  text: String!
  article: ArticleCreateOneWithoutCitationsInput!
}

input CitationCreateManyWithoutArticleInput {
  create: [CitationCreateWithoutArticleInput!]
  connect: [CitationWhereUniqueInput!]
}

input CitationCreateWithoutArticleInput {
  text: String!
}

"""An edge in a connection."""
type CitationEdge {
  """The item at the end of the edge."""
  node: Citation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CitationOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CitationPreviousValues {
  id: ID!
  text: String!
}

input CitationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CitationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CitationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CitationScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

type CitationSubscriptionPayload {
  mutation: MutationType!
  node: Citation
  updatedFields: [String!]
  previousValues: CitationPreviousValues
}

input CitationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CitationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CitationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CitationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CitationWhereInput
}

input CitationUpdateInput {
  text: String
  article: ArticleUpdateOneRequiredWithoutCitationsInput
}

input CitationUpdateManyDataInput {
  text: String
}

input CitationUpdateManyMutationInput {
  text: String
}

input CitationUpdateManyWithoutArticleInput {
  create: [CitationCreateWithoutArticleInput!]
  connect: [CitationWhereUniqueInput!]
  disconnect: [CitationWhereUniqueInput!]
  delete: [CitationWhereUniqueInput!]
  update: [CitationUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [CitationUpdateManyWithWhereNestedInput!]
  deleteMany: [CitationScalarWhereInput!]
  upsert: [CitationUpsertWithWhereUniqueWithoutArticleInput!]
}

input CitationUpdateManyWithWhereNestedInput {
  where: CitationScalarWhereInput!
  data: CitationUpdateManyDataInput!
}

input CitationUpdateWithoutArticleDataInput {
  text: String
}

input CitationUpdateWithWhereUniqueWithoutArticleInput {
  where: CitationWhereUniqueInput!
  data: CitationUpdateWithoutArticleDataInput!
}

input CitationUpsertWithWhereUniqueWithoutArticleInput {
  where: CitationWhereUniqueInput!
  update: CitationUpdateWithoutArticleDataInput!
  create: CitationCreateWithoutArticleInput!
}

input CitationWhereInput {
  """Logical AND on all given filters."""
  AND: [CitationWhereInput!]

  """Logical OR on all given filters."""
  OR: [CitationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CitationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  article: ArticleWhereInput
}

input CitationWhereUniqueInput {
  id: ID
}

type Content {
  title: String
  code: String
  logo: String
  metaDescription: String
  metaFavicon: String
  metaKeyWords: [String!]!
  sections: [Section!]!
  authorGuideline: String
  description: String
  scope: String
  contact: String
  footer: String
  librarianInfo: String
  privacyStatement: String
  proofInstructions: String
  publicationFrequency: String
  purchaseArticleDescription: String
  reviewGuidelines: String
  waiverPolicy: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""A connection to a list of items."""
type ContentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ContentEdge]!
  aggregate: AggregateContent!
}

input ContentCreateInput {
  title: String
  code: String
  logo: String
  metaDescription: String
  metaFavicon: String
  authorGuideline: String
  description: String
  scope: String
  contact: String
  footer: String
  librarianInfo: String
  privacyStatement: String
  proofInstructions: String
  publicationFrequency: String
  purchaseArticleDescription: String
  reviewGuidelines: String
  waiverPolicy: String
  metaKeyWords: ContentCreatemetaKeyWordsInput
  sections: ContentCreatesectionsInput
}

input ContentCreatemetaKeyWordsInput {
  set: [String!]
}

input ContentCreatesectionsInput {
  set: [Section!]
}

"""An edge in a connection."""
type ContentEdge {
  """The item at the end of the edge."""
  node: Content!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ContentOrderByInput {
  title_ASC
  title_DESC
  code_ASC
  code_DESC
  logo_ASC
  logo_DESC
  metaDescription_ASC
  metaDescription_DESC
  metaFavicon_ASC
  metaFavicon_DESC
  authorGuideline_ASC
  authorGuideline_DESC
  description_ASC
  description_DESC
  scope_ASC
  scope_DESC
  contact_ASC
  contact_DESC
  footer_ASC
  footer_DESC
  librarianInfo_ASC
  librarianInfo_DESC
  privacyStatement_ASC
  privacyStatement_DESC
  proofInstructions_ASC
  proofInstructions_DESC
  publicationFrequency_ASC
  publicationFrequency_DESC
  purchaseArticleDescription_ASC
  purchaseArticleDescription_DESC
  reviewGuidelines_ASC
  reviewGuidelines_DESC
  waiverPolicy_ASC
  waiverPolicy_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
}

type ContentPreviousValues {
  title: String
  code: String
  logo: String
  metaDescription: String
  metaFavicon: String
  metaKeyWords: [String!]!
  sections: [Section!]!
  authorGuideline: String
  description: String
  scope: String
  contact: String
  footer: String
  librarianInfo: String
  privacyStatement: String
  proofInstructions: String
  publicationFrequency: String
  purchaseArticleDescription: String
  reviewGuidelines: String
  waiverPolicy: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

type ContentSubscriptionPayload {
  mutation: MutationType!
  node: Content
  updatedFields: [String!]
  previousValues: ContentPreviousValues
}

input ContentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ContentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ContentWhereInput
}

input ContentUpdateManyMutationInput {
  title: String
  code: String
  logo: String
  metaDescription: String
  metaFavicon: String
  authorGuideline: String
  description: String
  scope: String
  contact: String
  footer: String
  librarianInfo: String
  privacyStatement: String
  proofInstructions: String
  publicationFrequency: String
  purchaseArticleDescription: String
  reviewGuidelines: String
  waiverPolicy: String
  metaKeyWords: ContentUpdatemetaKeyWordsInput
  sections: ContentUpdatesectionsInput
}

input ContentUpdatemetaKeyWordsInput {
  set: [String!]
}

input ContentUpdatesectionsInput {
  set: [Section!]
}

input ContentWhereInput {
  """Logical AND on all given filters."""
  AND: [ContentWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContentWhereInput!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  logo: String

  """All values that are not equal to given value."""
  logo_not: String

  """All values that are contained in given list."""
  logo_in: [String!]

  """All values that are not contained in given list."""
  logo_not_in: [String!]

  """All values less than the given value."""
  logo_lt: String

  """All values less than or equal the given value."""
  logo_lte: String

  """All values greater than the given value."""
  logo_gt: String

  """All values greater than or equal the given value."""
  logo_gte: String

  """All values containing the given string."""
  logo_contains: String

  """All values not containing the given string."""
  logo_not_contains: String

  """All values starting with the given string."""
  logo_starts_with: String

  """All values not starting with the given string."""
  logo_not_starts_with: String

  """All values ending with the given string."""
  logo_ends_with: String

  """All values not ending with the given string."""
  logo_not_ends_with: String
  metaDescription: String

  """All values that are not equal to given value."""
  metaDescription_not: String

  """All values that are contained in given list."""
  metaDescription_in: [String!]

  """All values that are not contained in given list."""
  metaDescription_not_in: [String!]

  """All values less than the given value."""
  metaDescription_lt: String

  """All values less than or equal the given value."""
  metaDescription_lte: String

  """All values greater than the given value."""
  metaDescription_gt: String

  """All values greater than or equal the given value."""
  metaDescription_gte: String

  """All values containing the given string."""
  metaDescription_contains: String

  """All values not containing the given string."""
  metaDescription_not_contains: String

  """All values starting with the given string."""
  metaDescription_starts_with: String

  """All values not starting with the given string."""
  metaDescription_not_starts_with: String

  """All values ending with the given string."""
  metaDescription_ends_with: String

  """All values not ending with the given string."""
  metaDescription_not_ends_with: String
  metaFavicon: String

  """All values that are not equal to given value."""
  metaFavicon_not: String

  """All values that are contained in given list."""
  metaFavicon_in: [String!]

  """All values that are not contained in given list."""
  metaFavicon_not_in: [String!]

  """All values less than the given value."""
  metaFavicon_lt: String

  """All values less than or equal the given value."""
  metaFavicon_lte: String

  """All values greater than the given value."""
  metaFavicon_gt: String

  """All values greater than or equal the given value."""
  metaFavicon_gte: String

  """All values containing the given string."""
  metaFavicon_contains: String

  """All values not containing the given string."""
  metaFavicon_not_contains: String

  """All values starting with the given string."""
  metaFavicon_starts_with: String

  """All values not starting with the given string."""
  metaFavicon_not_starts_with: String

  """All values ending with the given string."""
  metaFavicon_ends_with: String

  """All values not ending with the given string."""
  metaFavicon_not_ends_with: String
  authorGuideline: String

  """All values that are not equal to given value."""
  authorGuideline_not: String

  """All values that are contained in given list."""
  authorGuideline_in: [String!]

  """All values that are not contained in given list."""
  authorGuideline_not_in: [String!]

  """All values less than the given value."""
  authorGuideline_lt: String

  """All values less than or equal the given value."""
  authorGuideline_lte: String

  """All values greater than the given value."""
  authorGuideline_gt: String

  """All values greater than or equal the given value."""
  authorGuideline_gte: String

  """All values containing the given string."""
  authorGuideline_contains: String

  """All values not containing the given string."""
  authorGuideline_not_contains: String

  """All values starting with the given string."""
  authorGuideline_starts_with: String

  """All values not starting with the given string."""
  authorGuideline_not_starts_with: String

  """All values ending with the given string."""
  authorGuideline_ends_with: String

  """All values not ending with the given string."""
  authorGuideline_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  scope: String

  """All values that are not equal to given value."""
  scope_not: String

  """All values that are contained in given list."""
  scope_in: [String!]

  """All values that are not contained in given list."""
  scope_not_in: [String!]

  """All values less than the given value."""
  scope_lt: String

  """All values less than or equal the given value."""
  scope_lte: String

  """All values greater than the given value."""
  scope_gt: String

  """All values greater than or equal the given value."""
  scope_gte: String

  """All values containing the given string."""
  scope_contains: String

  """All values not containing the given string."""
  scope_not_contains: String

  """All values starting with the given string."""
  scope_starts_with: String

  """All values not starting with the given string."""
  scope_not_starts_with: String

  """All values ending with the given string."""
  scope_ends_with: String

  """All values not ending with the given string."""
  scope_not_ends_with: String
  contact: String

  """All values that are not equal to given value."""
  contact_not: String

  """All values that are contained in given list."""
  contact_in: [String!]

  """All values that are not contained in given list."""
  contact_not_in: [String!]

  """All values less than the given value."""
  contact_lt: String

  """All values less than or equal the given value."""
  contact_lte: String

  """All values greater than the given value."""
  contact_gt: String

  """All values greater than or equal the given value."""
  contact_gte: String

  """All values containing the given string."""
  contact_contains: String

  """All values not containing the given string."""
  contact_not_contains: String

  """All values starting with the given string."""
  contact_starts_with: String

  """All values not starting with the given string."""
  contact_not_starts_with: String

  """All values ending with the given string."""
  contact_ends_with: String

  """All values not ending with the given string."""
  contact_not_ends_with: String
  footer: String

  """All values that are not equal to given value."""
  footer_not: String

  """All values that are contained in given list."""
  footer_in: [String!]

  """All values that are not contained in given list."""
  footer_not_in: [String!]

  """All values less than the given value."""
  footer_lt: String

  """All values less than or equal the given value."""
  footer_lte: String

  """All values greater than the given value."""
  footer_gt: String

  """All values greater than or equal the given value."""
  footer_gte: String

  """All values containing the given string."""
  footer_contains: String

  """All values not containing the given string."""
  footer_not_contains: String

  """All values starting with the given string."""
  footer_starts_with: String

  """All values not starting with the given string."""
  footer_not_starts_with: String

  """All values ending with the given string."""
  footer_ends_with: String

  """All values not ending with the given string."""
  footer_not_ends_with: String
  librarianInfo: String

  """All values that are not equal to given value."""
  librarianInfo_not: String

  """All values that are contained in given list."""
  librarianInfo_in: [String!]

  """All values that are not contained in given list."""
  librarianInfo_not_in: [String!]

  """All values less than the given value."""
  librarianInfo_lt: String

  """All values less than or equal the given value."""
  librarianInfo_lte: String

  """All values greater than the given value."""
  librarianInfo_gt: String

  """All values greater than or equal the given value."""
  librarianInfo_gte: String

  """All values containing the given string."""
  librarianInfo_contains: String

  """All values not containing the given string."""
  librarianInfo_not_contains: String

  """All values starting with the given string."""
  librarianInfo_starts_with: String

  """All values not starting with the given string."""
  librarianInfo_not_starts_with: String

  """All values ending with the given string."""
  librarianInfo_ends_with: String

  """All values not ending with the given string."""
  librarianInfo_not_ends_with: String
  privacyStatement: String

  """All values that are not equal to given value."""
  privacyStatement_not: String

  """All values that are contained in given list."""
  privacyStatement_in: [String!]

  """All values that are not contained in given list."""
  privacyStatement_not_in: [String!]

  """All values less than the given value."""
  privacyStatement_lt: String

  """All values less than or equal the given value."""
  privacyStatement_lte: String

  """All values greater than the given value."""
  privacyStatement_gt: String

  """All values greater than or equal the given value."""
  privacyStatement_gte: String

  """All values containing the given string."""
  privacyStatement_contains: String

  """All values not containing the given string."""
  privacyStatement_not_contains: String

  """All values starting with the given string."""
  privacyStatement_starts_with: String

  """All values not starting with the given string."""
  privacyStatement_not_starts_with: String

  """All values ending with the given string."""
  privacyStatement_ends_with: String

  """All values not ending with the given string."""
  privacyStatement_not_ends_with: String
  proofInstructions: String

  """All values that are not equal to given value."""
  proofInstructions_not: String

  """All values that are contained in given list."""
  proofInstructions_in: [String!]

  """All values that are not contained in given list."""
  proofInstructions_not_in: [String!]

  """All values less than the given value."""
  proofInstructions_lt: String

  """All values less than or equal the given value."""
  proofInstructions_lte: String

  """All values greater than the given value."""
  proofInstructions_gt: String

  """All values greater than or equal the given value."""
  proofInstructions_gte: String

  """All values containing the given string."""
  proofInstructions_contains: String

  """All values not containing the given string."""
  proofInstructions_not_contains: String

  """All values starting with the given string."""
  proofInstructions_starts_with: String

  """All values not starting with the given string."""
  proofInstructions_not_starts_with: String

  """All values ending with the given string."""
  proofInstructions_ends_with: String

  """All values not ending with the given string."""
  proofInstructions_not_ends_with: String
  publicationFrequency: String

  """All values that are not equal to given value."""
  publicationFrequency_not: String

  """All values that are contained in given list."""
  publicationFrequency_in: [String!]

  """All values that are not contained in given list."""
  publicationFrequency_not_in: [String!]

  """All values less than the given value."""
  publicationFrequency_lt: String

  """All values less than or equal the given value."""
  publicationFrequency_lte: String

  """All values greater than the given value."""
  publicationFrequency_gt: String

  """All values greater than or equal the given value."""
  publicationFrequency_gte: String

  """All values containing the given string."""
  publicationFrequency_contains: String

  """All values not containing the given string."""
  publicationFrequency_not_contains: String

  """All values starting with the given string."""
  publicationFrequency_starts_with: String

  """All values not starting with the given string."""
  publicationFrequency_not_starts_with: String

  """All values ending with the given string."""
  publicationFrequency_ends_with: String

  """All values not ending with the given string."""
  publicationFrequency_not_ends_with: String
  purchaseArticleDescription: String

  """All values that are not equal to given value."""
  purchaseArticleDescription_not: String

  """All values that are contained in given list."""
  purchaseArticleDescription_in: [String!]

  """All values that are not contained in given list."""
  purchaseArticleDescription_not_in: [String!]

  """All values less than the given value."""
  purchaseArticleDescription_lt: String

  """All values less than or equal the given value."""
  purchaseArticleDescription_lte: String

  """All values greater than the given value."""
  purchaseArticleDescription_gt: String

  """All values greater than or equal the given value."""
  purchaseArticleDescription_gte: String

  """All values containing the given string."""
  purchaseArticleDescription_contains: String

  """All values not containing the given string."""
  purchaseArticleDescription_not_contains: String

  """All values starting with the given string."""
  purchaseArticleDescription_starts_with: String

  """All values not starting with the given string."""
  purchaseArticleDescription_not_starts_with: String

  """All values ending with the given string."""
  purchaseArticleDescription_ends_with: String

  """All values not ending with the given string."""
  purchaseArticleDescription_not_ends_with: String
  reviewGuidelines: String

  """All values that are not equal to given value."""
  reviewGuidelines_not: String

  """All values that are contained in given list."""
  reviewGuidelines_in: [String!]

  """All values that are not contained in given list."""
  reviewGuidelines_not_in: [String!]

  """All values less than the given value."""
  reviewGuidelines_lt: String

  """All values less than or equal the given value."""
  reviewGuidelines_lte: String

  """All values greater than the given value."""
  reviewGuidelines_gt: String

  """All values greater than or equal the given value."""
  reviewGuidelines_gte: String

  """All values containing the given string."""
  reviewGuidelines_contains: String

  """All values not containing the given string."""
  reviewGuidelines_not_contains: String

  """All values starting with the given string."""
  reviewGuidelines_starts_with: String

  """All values not starting with the given string."""
  reviewGuidelines_not_starts_with: String

  """All values ending with the given string."""
  reviewGuidelines_ends_with: String

  """All values not ending with the given string."""
  reviewGuidelines_not_ends_with: String
  waiverPolicy: String

  """All values that are not equal to given value."""
  waiverPolicy_not: String

  """All values that are contained in given list."""
  waiverPolicy_in: [String!]

  """All values that are not contained in given list."""
  waiverPolicy_not_in: [String!]

  """All values less than the given value."""
  waiverPolicy_lt: String

  """All values less than or equal the given value."""
  waiverPolicy_lte: String

  """All values greater than the given value."""
  waiverPolicy_gt: String

  """All values greater than or equal the given value."""
  waiverPolicy_gte: String

  """All values containing the given string."""
  waiverPolicy_contains: String

  """All values not containing the given string."""
  waiverPolicy_not_contains: String

  """All values starting with the given string."""
  waiverPolicy_starts_with: String

  """All values not starting with the given string."""
  waiverPolicy_not_starts_with: String

  """All values ending with the given string."""
  waiverPolicy_ends_with: String

  """All values not ending with the given string."""
  waiverPolicy_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
}

type CreditCard implements Node {
  id: ID!
  cardNumber: String!
  holder: String!
  expirationDate: String!
  saveCard: Boolean
  brand: String!
}

"""A connection to a list of items."""
type CreditCardConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CreditCardEdge]!
  aggregate: AggregateCreditCard!
}

input CreditCardCreateInput {
  cardNumber: String!
  holder: String!
  expirationDate: String!
  saveCard: Boolean
  brand: String!
}

input CreditCardCreateOneInput {
  create: CreditCardCreateInput
  connect: CreditCardWhereUniqueInput
}

"""An edge in a connection."""
type CreditCardEdge {
  """The item at the end of the edge."""
  node: CreditCard!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CreditCardOrderByInput {
  id_ASC
  id_DESC
  cardNumber_ASC
  cardNumber_DESC
  holder_ASC
  holder_DESC
  expirationDate_ASC
  expirationDate_DESC
  saveCard_ASC
  saveCard_DESC
  brand_ASC
  brand_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CreditCardPreviousValues {
  id: ID!
  cardNumber: String!
  holder: String!
  expirationDate: String!
  saveCard: Boolean
  brand: String!
}

type CreditCardSubscriptionPayload {
  mutation: MutationType!
  node: CreditCard
  updatedFields: [String!]
  previousValues: CreditCardPreviousValues
}

input CreditCardSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CreditCardSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CreditCardSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CreditCardSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CreditCardWhereInput
}

input CreditCardUpdateDataInput {
  cardNumber: String
  holder: String
  expirationDate: String
  saveCard: Boolean
  brand: String
}

input CreditCardUpdateInput {
  cardNumber: String
  holder: String
  expirationDate: String
  saveCard: Boolean
  brand: String
}

input CreditCardUpdateManyMutationInput {
  cardNumber: String
  holder: String
  expirationDate: String
  saveCard: Boolean
  brand: String
}

input CreditCardUpdateOneInput {
  create: CreditCardCreateInput
  connect: CreditCardWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CreditCardUpdateDataInput
  upsert: CreditCardUpsertNestedInput
}

input CreditCardUpsertNestedInput {
  update: CreditCardUpdateDataInput!
  create: CreditCardCreateInput!
}

input CreditCardWhereInput {
  """Logical AND on all given filters."""
  AND: [CreditCardWhereInput!]

  """Logical OR on all given filters."""
  OR: [CreditCardWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CreditCardWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  cardNumber: String

  """All values that are not equal to given value."""
  cardNumber_not: String

  """All values that are contained in given list."""
  cardNumber_in: [String!]

  """All values that are not contained in given list."""
  cardNumber_not_in: [String!]

  """All values less than the given value."""
  cardNumber_lt: String

  """All values less than or equal the given value."""
  cardNumber_lte: String

  """All values greater than the given value."""
  cardNumber_gt: String

  """All values greater than or equal the given value."""
  cardNumber_gte: String

  """All values containing the given string."""
  cardNumber_contains: String

  """All values not containing the given string."""
  cardNumber_not_contains: String

  """All values starting with the given string."""
  cardNumber_starts_with: String

  """All values not starting with the given string."""
  cardNumber_not_starts_with: String

  """All values ending with the given string."""
  cardNumber_ends_with: String

  """All values not ending with the given string."""
  cardNumber_not_ends_with: String
  holder: String

  """All values that are not equal to given value."""
  holder_not: String

  """All values that are contained in given list."""
  holder_in: [String!]

  """All values that are not contained in given list."""
  holder_not_in: [String!]

  """All values less than the given value."""
  holder_lt: String

  """All values less than or equal the given value."""
  holder_lte: String

  """All values greater than the given value."""
  holder_gt: String

  """All values greater than or equal the given value."""
  holder_gte: String

  """All values containing the given string."""
  holder_contains: String

  """All values not containing the given string."""
  holder_not_contains: String

  """All values starting with the given string."""
  holder_starts_with: String

  """All values not starting with the given string."""
  holder_not_starts_with: String

  """All values ending with the given string."""
  holder_ends_with: String

  """All values not ending with the given string."""
  holder_not_ends_with: String
  expirationDate: String

  """All values that are not equal to given value."""
  expirationDate_not: String

  """All values that are contained in given list."""
  expirationDate_in: [String!]

  """All values that are not contained in given list."""
  expirationDate_not_in: [String!]

  """All values less than the given value."""
  expirationDate_lt: String

  """All values less than or equal the given value."""
  expirationDate_lte: String

  """All values greater than the given value."""
  expirationDate_gt: String

  """All values greater than or equal the given value."""
  expirationDate_gte: String

  """All values containing the given string."""
  expirationDate_contains: String

  """All values not containing the given string."""
  expirationDate_not_contains: String

  """All values starting with the given string."""
  expirationDate_starts_with: String

  """All values not starting with the given string."""
  expirationDate_not_starts_with: String

  """All values ending with the given string."""
  expirationDate_ends_with: String

  """All values not ending with the given string."""
  expirationDate_not_ends_with: String
  saveCard: Boolean

  """All values that are not equal to given value."""
  saveCard_not: Boolean
  brand: String

  """All values that are not equal to given value."""
  brand_not: String

  """All values that are contained in given list."""
  brand_in: [String!]

  """All values that are not contained in given list."""
  brand_not_in: [String!]

  """All values less than the given value."""
  brand_lt: String

  """All values less than or equal the given value."""
  brand_lte: String

  """All values greater than the given value."""
  brand_gt: String

  """All values greater than or equal the given value."""
  brand_gte: String

  """All values containing the given string."""
  brand_contains: String

  """All values not containing the given string."""
  brand_not_contains: String

  """All values starting with the given string."""
  brand_starts_with: String

  """All values not starting with the given string."""
  brand_not_starts_with: String

  """All values ending with the given string."""
  brand_ends_with: String

  """All values not ending with the given string."""
  brand_not_ends_with: String
}

input CreditCardWhereUniqueInput {
  id: ID
}

type Cupom implements Node {
  id: ID!
  discount: Int!
  code: String!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CupomConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CupomEdge]!
  aggregate: AggregateCupom!
}

input CupomCreateInput {
  discount: Int!
  code: String!
}

input CupomCreateOneInput {
  create: CupomCreateInput
  connect: CupomWhereUniqueInput
}

"""An edge in a connection."""
type CupomEdge {
  """The item at the end of the edge."""
  node: Cupom!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CupomOrderByInput {
  id_ASC
  id_DESC
  discount_ASC
  discount_DESC
  code_ASC
  code_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CupomPreviousValues {
  id: ID!
  discount: Int!
  code: String!
  updatedAt: DateTime!
}

type CupomSubscriptionPayload {
  mutation: MutationType!
  node: Cupom
  updatedFields: [String!]
  previousValues: CupomPreviousValues
}

input CupomSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CupomSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CupomSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CupomSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CupomWhereInput
}

input CupomUpdateDataInput {
  discount: Int
  code: String
}

input CupomUpdateInput {
  discount: Int
  code: String
}

input CupomUpdateManyMutationInput {
  discount: Int
  code: String
}

input CupomUpdateOneInput {
  create: CupomCreateInput
  connect: CupomWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CupomUpdateDataInput
  upsert: CupomUpsertNestedInput
}

input CupomUpsertNestedInput {
  update: CupomUpdateDataInput!
  create: CupomCreateInput!
}

input CupomWhereInput {
  """Logical AND on all given filters."""
  AND: [CupomWhereInput!]

  """Logical OR on all given filters."""
  OR: [CupomWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CupomWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  discount: Int

  """All values that are not equal to given value."""
  discount_not: Int

  """All values that are contained in given list."""
  discount_in: [Int!]

  """All values that are not contained in given list."""
  discount_not_in: [Int!]

  """All values less than the given value."""
  discount_lt: Int

  """All values less than or equal the given value."""
  discount_lte: Int

  """All values greater than the given value."""
  discount_gt: Int

  """All values greater than or equal the given value."""
  discount_gte: Int
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

input CupomWhereUniqueInput {
  id: ID
}

scalar DateTime

type File implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

"""A connection to a list of items."""
type FileConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

input FileCreateInput {
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

input FileCreateOneInput {
  create: FileCreateInput
  connect: FileWhereUniqueInput
}

"""An edge in a connection."""
type FileEdge {
  """The item at the end of the edge."""
  node: File!

  """A cursor for use in pagination."""
  cursor: String!
}

enum FileOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  filename_ASC
  filename_DESC
  mimetype_ASC
  mimetype_DESC
  encoding_ASC
  encoding_DESC
  url_ASC
  url_DESC
}

type FilePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

type FileSubscriptionPayload {
  mutation: MutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

input FileSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [FileSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [FileSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FileSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FileWhereInput
}

input FileUpdateDataInput {
  filename: String
  mimetype: String
  encoding: String
  url: String
}

input FileUpdateInput {
  filename: String
  mimetype: String
  encoding: String
  url: String
}

input FileUpdateManyMutationInput {
  filename: String
  mimetype: String
  encoding: String
  url: String
}

input FileUpdateOneInput {
  create: FileCreateInput
  connect: FileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: FileUpdateDataInput
  upsert: FileUpsertNestedInput
}

input FileUpsertNestedInput {
  update: FileUpdateDataInput!
  create: FileCreateInput!
}

input FileWhereInput {
  """Logical AND on all given filters."""
  AND: [FileWhereInput!]

  """Logical OR on all given filters."""
  OR: [FileWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FileWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  filename: String

  """All values that are not equal to given value."""
  filename_not: String

  """All values that are contained in given list."""
  filename_in: [String!]

  """All values that are not contained in given list."""
  filename_not_in: [String!]

  """All values less than the given value."""
  filename_lt: String

  """All values less than or equal the given value."""
  filename_lte: String

  """All values greater than the given value."""
  filename_gt: String

  """All values greater than or equal the given value."""
  filename_gte: String

  """All values containing the given string."""
  filename_contains: String

  """All values not containing the given string."""
  filename_not_contains: String

  """All values starting with the given string."""
  filename_starts_with: String

  """All values not starting with the given string."""
  filename_not_starts_with: String

  """All values ending with the given string."""
  filename_ends_with: String

  """All values not ending with the given string."""
  filename_not_ends_with: String
  mimetype: String

  """All values that are not equal to given value."""
  mimetype_not: String

  """All values that are contained in given list."""
  mimetype_in: [String!]

  """All values that are not contained in given list."""
  mimetype_not_in: [String!]

  """All values less than the given value."""
  mimetype_lt: String

  """All values less than or equal the given value."""
  mimetype_lte: String

  """All values greater than the given value."""
  mimetype_gt: String

  """All values greater than or equal the given value."""
  mimetype_gte: String

  """All values containing the given string."""
  mimetype_contains: String

  """All values not containing the given string."""
  mimetype_not_contains: String

  """All values starting with the given string."""
  mimetype_starts_with: String

  """All values not starting with the given string."""
  mimetype_not_starts_with: String

  """All values ending with the given string."""
  mimetype_ends_with: String

  """All values not ending with the given string."""
  mimetype_not_ends_with: String
  encoding: String

  """All values that are not equal to given value."""
  encoding_not: String

  """All values that are contained in given list."""
  encoding_in: [String!]

  """All values that are not contained in given list."""
  encoding_not_in: [String!]

  """All values less than the given value."""
  encoding_lt: String

  """All values less than or equal the given value."""
  encoding_lte: String

  """All values greater than the given value."""
  encoding_gt: String

  """All values greater than or equal the given value."""
  encoding_gte: String

  """All values containing the given string."""
  encoding_contains: String

  """All values not containing the given string."""
  encoding_not_contains: String

  """All values starting with the given string."""
  encoding_starts_with: String

  """All values not starting with the given string."""
  encoding_not_starts_with: String

  """All values ending with the given string."""
  encoding_ends_with: String

  """All values not ending with the given string."""
  encoding_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
}

input FileWhereUniqueInput {
  id: ID
  url: String
}

type Issue implements Node {
  id: ID!
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  submitedArticles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  selectedArticles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  selectedEditorials(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type IssueConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [IssueEdge]!
  aggregate: AggregateIssue!
}

input IssueCreateInput {
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  submitedArticles: ArticleCreateManyWithoutIssueInput
  selectedArticles: ArticleCreateManyWithoutSelectedByInput
  selectedEditorials: ArticleCreateManyWithoutEditorialInput
}

input IssueCreateManyWithoutSelectedArticlesInput {
  create: [IssueCreateWithoutSelectedArticlesInput!]
  connect: [IssueWhereUniqueInput!]
}

input IssueCreateManyWithoutSelectedEditorialsInput {
  create: [IssueCreateWithoutSelectedEditorialsInput!]
  connect: [IssueWhereUniqueInput!]
}

input IssueCreateOneWithoutSubmitedArticlesInput {
  create: IssueCreateWithoutSubmitedArticlesInput
  connect: IssueWhereUniqueInput
}

input IssueCreateWithoutSelectedArticlesInput {
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  submitedArticles: ArticleCreateManyWithoutIssueInput
  selectedEditorials: ArticleCreateManyWithoutEditorialInput
}

input IssueCreateWithoutSelectedEditorialsInput {
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  submitedArticles: ArticleCreateManyWithoutIssueInput
  selectedArticles: ArticleCreateManyWithoutSelectedByInput
}

input IssueCreateWithoutSubmitedArticlesInput {
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  selectedArticles: ArticleCreateManyWithoutSelectedByInput
  selectedEditorials: ArticleCreateManyWithoutEditorialInput
}

"""An edge in a connection."""
type IssueEdge {
  """The item at the end of the edge."""
  node: Issue!

  """A cursor for use in pagination."""
  cursor: String!
}

enum IssueOrderByInput {
  id_ASC
  id_DESC
  key_ASC
  key_DESC
  title_ASC
  title_DESC
  image_ASC
  image_DESC
  volume_ASC
  volume_DESC
  number_ASC
  number_DESC
  year_ASC
  year_DESC
  body_ASC
  body_DESC
  evaluationPeriod_ASC
  evaluationPeriod_DESC
  publicationPrediction_ASC
  publicationPrediction_DESC
  contact_ASC
  contact_DESC
  publishedCall_ASC
  publishedCall_DESC
  published_ASC
  published_DESC
  startCall_ASC
  startCall_DESC
  endCall_ASC
  endCall_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type IssuePreviousValues {
  id: ID!
  key: String!
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime!
  endCall: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input IssueScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [IssueScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [IssueScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [IssueScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  volume: Int

  """All values that are not equal to given value."""
  volume_not: Int

  """All values that are contained in given list."""
  volume_in: [Int!]

  """All values that are not contained in given list."""
  volume_not_in: [Int!]

  """All values less than the given value."""
  volume_lt: Int

  """All values less than or equal the given value."""
  volume_lte: Int

  """All values greater than the given value."""
  volume_gt: Int

  """All values greater than or equal the given value."""
  volume_gte: Int
  number: Int

  """All values that are not equal to given value."""
  number_not: Int

  """All values that are contained in given list."""
  number_in: [Int!]

  """All values that are not contained in given list."""
  number_not_in: [Int!]

  """All values less than the given value."""
  number_lt: Int

  """All values less than or equal the given value."""
  number_lte: Int

  """All values greater than the given value."""
  number_gt: Int

  """All values greater than or equal the given value."""
  number_gte: Int
  year: Int

  """All values that are not equal to given value."""
  year_not: Int

  """All values that are contained in given list."""
  year_in: [Int!]

  """All values that are not contained in given list."""
  year_not_in: [Int!]

  """All values less than the given value."""
  year_lt: Int

  """All values less than or equal the given value."""
  year_lte: Int

  """All values greater than the given value."""
  year_gt: Int

  """All values greater than or equal the given value."""
  year_gte: Int
  body: String

  """All values that are not equal to given value."""
  body_not: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values less than the given value."""
  body_lt: String

  """All values less than or equal the given value."""
  body_lte: String

  """All values greater than the given value."""
  body_gt: String

  """All values greater than or equal the given value."""
  body_gte: String

  """All values containing the given string."""
  body_contains: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values starting with the given string."""
  body_starts_with: String

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values not ending with the given string."""
  body_not_ends_with: String
  evaluationPeriod: Int

  """All values that are not equal to given value."""
  evaluationPeriod_not: Int

  """All values that are contained in given list."""
  evaluationPeriod_in: [Int!]

  """All values that are not contained in given list."""
  evaluationPeriod_not_in: [Int!]

  """All values less than the given value."""
  evaluationPeriod_lt: Int

  """All values less than or equal the given value."""
  evaluationPeriod_lte: Int

  """All values greater than the given value."""
  evaluationPeriod_gt: Int

  """All values greater than or equal the given value."""
  evaluationPeriod_gte: Int
  publicationPrediction: DateTime

  """All values that are not equal to given value."""
  publicationPrediction_not: DateTime

  """All values that are contained in given list."""
  publicationPrediction_in: [DateTime!]

  """All values that are not contained in given list."""
  publicationPrediction_not_in: [DateTime!]

  """All values less than the given value."""
  publicationPrediction_lt: DateTime

  """All values less than or equal the given value."""
  publicationPrediction_lte: DateTime

  """All values greater than the given value."""
  publicationPrediction_gt: DateTime

  """All values greater than or equal the given value."""
  publicationPrediction_gte: DateTime
  contact: String

  """All values that are not equal to given value."""
  contact_not: String

  """All values that are contained in given list."""
  contact_in: [String!]

  """All values that are not contained in given list."""
  contact_not_in: [String!]

  """All values less than the given value."""
  contact_lt: String

  """All values less than or equal the given value."""
  contact_lte: String

  """All values greater than the given value."""
  contact_gt: String

  """All values greater than or equal the given value."""
  contact_gte: String

  """All values containing the given string."""
  contact_contains: String

  """All values not containing the given string."""
  contact_not_contains: String

  """All values starting with the given string."""
  contact_starts_with: String

  """All values not starting with the given string."""
  contact_not_starts_with: String

  """All values ending with the given string."""
  contact_ends_with: String

  """All values not ending with the given string."""
  contact_not_ends_with: String
  publishedCall: Boolean

  """All values that are not equal to given value."""
  publishedCall_not: Boolean
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  startCall: DateTime

  """All values that are not equal to given value."""
  startCall_not: DateTime

  """All values that are contained in given list."""
  startCall_in: [DateTime!]

  """All values that are not contained in given list."""
  startCall_not_in: [DateTime!]

  """All values less than the given value."""
  startCall_lt: DateTime

  """All values less than or equal the given value."""
  startCall_lte: DateTime

  """All values greater than the given value."""
  startCall_gt: DateTime

  """All values greater than or equal the given value."""
  startCall_gte: DateTime
  endCall: DateTime

  """All values that are not equal to given value."""
  endCall_not: DateTime

  """All values that are contained in given list."""
  endCall_in: [DateTime!]

  """All values that are not contained in given list."""
  endCall_not_in: [DateTime!]

  """All values less than the given value."""
  endCall_lt: DateTime

  """All values less than or equal the given value."""
  endCall_lte: DateTime

  """All values greater than the given value."""
  endCall_gt: DateTime

  """All values greater than or equal the given value."""
  endCall_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type IssueSubscriptionPayload {
  mutation: MutationType!
  node: Issue
  updatedFields: [String!]
  previousValues: IssuePreviousValues
}

input IssueSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [IssueSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [IssueSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [IssueSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: IssueWhereInput
}

input IssueUpdateInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
  submitedArticles: ArticleUpdateManyWithoutIssueInput
  selectedArticles: ArticleUpdateManyWithoutSelectedByInput
  selectedEditorials: ArticleUpdateManyWithoutEditorialInput
}

input IssueUpdateManyDataInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
}

input IssueUpdateManyMutationInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
}

input IssueUpdateManyWithoutSelectedArticlesInput {
  create: [IssueCreateWithoutSelectedArticlesInput!]
  connect: [IssueWhereUniqueInput!]
  disconnect: [IssueWhereUniqueInput!]
  delete: [IssueWhereUniqueInput!]
  update: [IssueUpdateWithWhereUniqueWithoutSelectedArticlesInput!]
  updateMany: [IssueUpdateManyWithWhereNestedInput!]
  deleteMany: [IssueScalarWhereInput!]
  upsert: [IssueUpsertWithWhereUniqueWithoutSelectedArticlesInput!]
}

input IssueUpdateManyWithoutSelectedEditorialsInput {
  create: [IssueCreateWithoutSelectedEditorialsInput!]
  connect: [IssueWhereUniqueInput!]
  disconnect: [IssueWhereUniqueInput!]
  delete: [IssueWhereUniqueInput!]
  update: [IssueUpdateWithWhereUniqueWithoutSelectedEditorialsInput!]
  updateMany: [IssueUpdateManyWithWhereNestedInput!]
  deleteMany: [IssueScalarWhereInput!]
  upsert: [IssueUpsertWithWhereUniqueWithoutSelectedEditorialsInput!]
}

input IssueUpdateManyWithWhereNestedInput {
  where: IssueScalarWhereInput!
  data: IssueUpdateManyDataInput!
}

input IssueUpdateOneRequiredWithoutSubmitedArticlesInput {
  create: IssueCreateWithoutSubmitedArticlesInput
  connect: IssueWhereUniqueInput
  update: IssueUpdateWithoutSubmitedArticlesDataInput
  upsert: IssueUpsertWithoutSubmitedArticlesInput
}

input IssueUpdateWithoutSelectedArticlesDataInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
  submitedArticles: ArticleUpdateManyWithoutIssueInput
  selectedEditorials: ArticleUpdateManyWithoutEditorialInput
}

input IssueUpdateWithoutSelectedEditorialsDataInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
  submitedArticles: ArticleUpdateManyWithoutIssueInput
  selectedArticles: ArticleUpdateManyWithoutSelectedByInput
}

input IssueUpdateWithoutSubmitedArticlesDataInput {
  key: String
  title: String
  image: String
  volume: Int
  number: Int
  year: Int
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean
  published: Boolean
  startCall: DateTime
  endCall: DateTime
  selectedArticles: ArticleUpdateManyWithoutSelectedByInput
  selectedEditorials: ArticleUpdateManyWithoutEditorialInput
}

input IssueUpdateWithWhereUniqueWithoutSelectedArticlesInput {
  where: IssueWhereUniqueInput!
  data: IssueUpdateWithoutSelectedArticlesDataInput!
}

input IssueUpdateWithWhereUniqueWithoutSelectedEditorialsInput {
  where: IssueWhereUniqueInput!
  data: IssueUpdateWithoutSelectedEditorialsDataInput!
}

input IssueUpsertWithoutSubmitedArticlesInput {
  update: IssueUpdateWithoutSubmitedArticlesDataInput!
  create: IssueCreateWithoutSubmitedArticlesInput!
}

input IssueUpsertWithWhereUniqueWithoutSelectedArticlesInput {
  where: IssueWhereUniqueInput!
  update: IssueUpdateWithoutSelectedArticlesDataInput!
  create: IssueCreateWithoutSelectedArticlesInput!
}

input IssueUpsertWithWhereUniqueWithoutSelectedEditorialsInput {
  where: IssueWhereUniqueInput!
  update: IssueUpdateWithoutSelectedEditorialsDataInput!
  create: IssueCreateWithoutSelectedEditorialsInput!
}

input IssueWhereInput {
  """Logical AND on all given filters."""
  AND: [IssueWhereInput!]

  """Logical OR on all given filters."""
  OR: [IssueWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [IssueWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  volume: Int

  """All values that are not equal to given value."""
  volume_not: Int

  """All values that are contained in given list."""
  volume_in: [Int!]

  """All values that are not contained in given list."""
  volume_not_in: [Int!]

  """All values less than the given value."""
  volume_lt: Int

  """All values less than or equal the given value."""
  volume_lte: Int

  """All values greater than the given value."""
  volume_gt: Int

  """All values greater than or equal the given value."""
  volume_gte: Int
  number: Int

  """All values that are not equal to given value."""
  number_not: Int

  """All values that are contained in given list."""
  number_in: [Int!]

  """All values that are not contained in given list."""
  number_not_in: [Int!]

  """All values less than the given value."""
  number_lt: Int

  """All values less than or equal the given value."""
  number_lte: Int

  """All values greater than the given value."""
  number_gt: Int

  """All values greater than or equal the given value."""
  number_gte: Int
  year: Int

  """All values that are not equal to given value."""
  year_not: Int

  """All values that are contained in given list."""
  year_in: [Int!]

  """All values that are not contained in given list."""
  year_not_in: [Int!]

  """All values less than the given value."""
  year_lt: Int

  """All values less than or equal the given value."""
  year_lte: Int

  """All values greater than the given value."""
  year_gt: Int

  """All values greater than or equal the given value."""
  year_gte: Int
  body: String

  """All values that are not equal to given value."""
  body_not: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values less than the given value."""
  body_lt: String

  """All values less than or equal the given value."""
  body_lte: String

  """All values greater than the given value."""
  body_gt: String

  """All values greater than or equal the given value."""
  body_gte: String

  """All values containing the given string."""
  body_contains: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values starting with the given string."""
  body_starts_with: String

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values not ending with the given string."""
  body_not_ends_with: String
  evaluationPeriod: Int

  """All values that are not equal to given value."""
  evaluationPeriod_not: Int

  """All values that are contained in given list."""
  evaluationPeriod_in: [Int!]

  """All values that are not contained in given list."""
  evaluationPeriod_not_in: [Int!]

  """All values less than the given value."""
  evaluationPeriod_lt: Int

  """All values less than or equal the given value."""
  evaluationPeriod_lte: Int

  """All values greater than the given value."""
  evaluationPeriod_gt: Int

  """All values greater than or equal the given value."""
  evaluationPeriod_gte: Int
  publicationPrediction: DateTime

  """All values that are not equal to given value."""
  publicationPrediction_not: DateTime

  """All values that are contained in given list."""
  publicationPrediction_in: [DateTime!]

  """All values that are not contained in given list."""
  publicationPrediction_not_in: [DateTime!]

  """All values less than the given value."""
  publicationPrediction_lt: DateTime

  """All values less than or equal the given value."""
  publicationPrediction_lte: DateTime

  """All values greater than the given value."""
  publicationPrediction_gt: DateTime

  """All values greater than or equal the given value."""
  publicationPrediction_gte: DateTime
  contact: String

  """All values that are not equal to given value."""
  contact_not: String

  """All values that are contained in given list."""
  contact_in: [String!]

  """All values that are not contained in given list."""
  contact_not_in: [String!]

  """All values less than the given value."""
  contact_lt: String

  """All values less than or equal the given value."""
  contact_lte: String

  """All values greater than the given value."""
  contact_gt: String

  """All values greater than or equal the given value."""
  contact_gte: String

  """All values containing the given string."""
  contact_contains: String

  """All values not containing the given string."""
  contact_not_contains: String

  """All values starting with the given string."""
  contact_starts_with: String

  """All values not starting with the given string."""
  contact_not_starts_with: String

  """All values ending with the given string."""
  contact_ends_with: String

  """All values not ending with the given string."""
  contact_not_ends_with: String
  publishedCall: Boolean

  """All values that are not equal to given value."""
  publishedCall_not: Boolean
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  startCall: DateTime

  """All values that are not equal to given value."""
  startCall_not: DateTime

  """All values that are contained in given list."""
  startCall_in: [DateTime!]

  """All values that are not contained in given list."""
  startCall_not_in: [DateTime!]

  """All values less than the given value."""
  startCall_lt: DateTime

  """All values less than or equal the given value."""
  startCall_lte: DateTime

  """All values greater than the given value."""
  startCall_gt: DateTime

  """All values greater than or equal the given value."""
  startCall_gte: DateTime
  endCall: DateTime

  """All values that are not equal to given value."""
  endCall_not: DateTime

  """All values that are contained in given list."""
  endCall_in: [DateTime!]

  """All values that are not contained in given list."""
  endCall_not_in: [DateTime!]

  """All values less than the given value."""
  endCall_lt: DateTime

  """All values less than or equal the given value."""
  endCall_lte: DateTime

  """All values greater than the given value."""
  endCall_gt: DateTime

  """All values greater than or equal the given value."""
  endCall_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  submitedArticles_every: ArticleWhereInput
  submitedArticles_some: ArticleWhereInput
  submitedArticles_none: ArticleWhereInput
  selectedArticles_every: ArticleWhereInput
  selectedArticles_some: ArticleWhereInput
  selectedArticles_none: ArticleWhereInput
  selectedEditorials_every: ArticleWhereInput
  selectedEditorials_some: ArticleWhereInput
  selectedEditorials_none: ArticleWhereInput
}

input IssueWhereUniqueInput {
  id: ID
  key: String
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createNewsletterSubscription(data: NewsletterSubscriptionCreateInput!): NewsletterSubscription!
  createContent(data: ContentCreateInput!): Content!
  createIssue(data: IssueCreateInput!): Issue!
  createArticle(data: ArticleCreateInput!): Article!
  createCitation(data: CitationCreateInput!): Citation!
  createPayment(data: PaymentCreateInput!): Payment!
  createResetPasswordRequest(data: ResetPasswordRequestCreateInput!): ResetPasswordRequest!
  createCreditCard(data: CreditCardCreateInput!): CreditCard!
  createCupom(data: CupomCreateInput!): Cupom!
  createFile(data: FileCreateInput!): File!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateNewsletterSubscription(data: NewsletterSubscriptionUpdateInput!, where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  updateIssue(data: IssueUpdateInput!, where: IssueWhereUniqueInput!): Issue
  updateArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  updateCitation(data: CitationUpdateInput!, where: CitationWhereUniqueInput!): Citation
  updatePayment(data: PaymentUpdateInput!, where: PaymentWhereUniqueInput!): Payment
  updateResetPasswordRequest(data: ResetPasswordRequestUpdateInput!, where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  updateCreditCard(data: CreditCardUpdateInput!, where: CreditCardWhereUniqueInput!): CreditCard
  updateCupom(data: CupomUpdateInput!, where: CupomWhereUniqueInput!): Cupom
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  deleteUser(where: UserWhereUniqueInput!): User
  deleteNewsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  deleteIssue(where: IssueWhereUniqueInput!): Issue
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  deleteCitation(where: CitationWhereUniqueInput!): Citation
  deletePayment(where: PaymentWhereUniqueInput!): Payment
  deleteResetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  deleteCreditCard(where: CreditCardWhereUniqueInput!): CreditCard
  deleteCupom(where: CupomWhereUniqueInput!): Cupom
  deleteFile(where: FileWhereUniqueInput!): File
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertNewsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!, create: NewsletterSubscriptionCreateInput!, update: NewsletterSubscriptionUpdateInput!): NewsletterSubscription!
  upsertIssue(where: IssueWhereUniqueInput!, create: IssueCreateInput!, update: IssueUpdateInput!): Issue!
  upsertArticle(where: ArticleWhereUniqueInput!, create: ArticleCreateInput!, update: ArticleUpdateInput!): Article!
  upsertCitation(where: CitationWhereUniqueInput!, create: CitationCreateInput!, update: CitationUpdateInput!): Citation!
  upsertPayment(where: PaymentWhereUniqueInput!, create: PaymentCreateInput!, update: PaymentUpdateInput!): Payment!
  upsertResetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!, create: ResetPasswordRequestCreateInput!, update: ResetPasswordRequestUpdateInput!): ResetPasswordRequest!
  upsertCreditCard(where: CreditCardWhereUniqueInput!, create: CreditCardCreateInput!, update: CreditCardUpdateInput!): CreditCard!
  upsertCupom(where: CupomWhereUniqueInput!, create: CupomCreateInput!, update: CupomUpdateInput!): Cupom!
  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyNewsletterSubscriptions(data: NewsletterSubscriptionUpdateManyMutationInput!, where: NewsletterSubscriptionWhereInput): BatchPayload!
  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!
  updateManyIssues(data: IssueUpdateManyMutationInput!, where: IssueWhereInput): BatchPayload!
  updateManyArticles(data: ArticleUpdateManyMutationInput!, where: ArticleWhereInput): BatchPayload!
  updateManyCitations(data: CitationUpdateManyMutationInput!, where: CitationWhereInput): BatchPayload!
  updateManyPayments(data: PaymentUpdateManyMutationInput!, where: PaymentWhereInput): BatchPayload!
  updateManyResetPasswordRequests(data: ResetPasswordRequestUpdateManyMutationInput!, where: ResetPasswordRequestWhereInput): BatchPayload!
  updateManyCreditCards(data: CreditCardUpdateManyMutationInput!, where: CreditCardWhereInput): BatchPayload!
  updateManyCupoms(data: CupomUpdateManyMutationInput!, where: CupomWhereInput): BatchPayload!
  updateManyFiles(data: FileUpdateManyMutationInput!, where: FileWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyNewsletterSubscriptions(where: NewsletterSubscriptionWhereInput): BatchPayload!
  deleteManyContents(where: ContentWhereInput): BatchPayload!
  deleteManyIssues(where: IssueWhereInput): BatchPayload!
  deleteManyArticles(where: ArticleWhereInput): BatchPayload!
  deleteManyCitations(where: CitationWhereInput): BatchPayload!
  deleteManyPayments(where: PaymentWhereInput): BatchPayload!
  deleteManyResetPasswordRequests(where: ResetPasswordRequestWhereInput): BatchPayload!
  deleteManyCreditCards(where: CreditCardWhereInput): BatchPayload!
  deleteManyCupoms(where: CupomWhereInput): BatchPayload!
  deleteManyFiles(where: FileWhereInput): BatchPayload!
  executeRaw(database: PrismaDatabase, query: String!): Json!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type NewsletterSubscription {
  email: String!
  createdAt: DateTime!
}

"""A connection to a list of items."""
type NewsletterSubscriptionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [NewsletterSubscriptionEdge]!
  aggregate: AggregateNewsletterSubscription!
}

input NewsletterSubscriptionCreateInput {
  email: String!
}

"""An edge in a connection."""
type NewsletterSubscriptionEdge {
  """The item at the end of the edge."""
  node: NewsletterSubscription!

  """A cursor for use in pagination."""
  cursor: String!
}

enum NewsletterSubscriptionOrderByInput {
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type NewsletterSubscriptionPreviousValues {
  email: String!
  createdAt: DateTime!
}

type NewsletterSubscriptionSubscriptionPayload {
  mutation: MutationType!
  node: NewsletterSubscription
  updatedFields: [String!]
  previousValues: NewsletterSubscriptionPreviousValues
}

input NewsletterSubscriptionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsletterSubscriptionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsletterSubscriptionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsletterSubscriptionSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: NewsletterSubscriptionWhereInput
}

input NewsletterSubscriptionUpdateInput {
  email: String
}

input NewsletterSubscriptionUpdateManyMutationInput {
  email: String
}

input NewsletterSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsletterSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsletterSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsletterSubscriptionWhereInput!]
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
}

input NewsletterSubscriptionWhereUniqueInput {
  email: String
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Payment implements Node {
  id: ID!
  paymentId: String
  type: String!
  currency: String
  creditCard: CreditCard
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  customer: User!
  merchantOrderId: String!
  customerName: String
  article: Article!
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  cupom: Cupom
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""A connection to a list of items."""
type PaymentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PaymentEdge]!
  aggregate: AggregatePayment!
}

input PaymentCreateInput {
  paymentId: String
  type: String!
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String!
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardCreateOneInput
  customer: UserCreateOneWithoutPaymentsInput!
  article: ArticleCreateOneWithoutPaymentInput!
  cupom: CupomCreateOneInput
}

input PaymentCreateManyWithoutCustomerInput {
  create: [PaymentCreateWithoutCustomerInput!]
  connect: [PaymentWhereUniqueInput!]
}

input PaymentCreateOneWithoutArticleInput {
  create: PaymentCreateWithoutArticleInput
  connect: PaymentWhereUniqueInput
}

input PaymentCreateWithoutArticleInput {
  paymentId: String
  type: String!
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String!
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardCreateOneInput
  customer: UserCreateOneWithoutPaymentsInput!
  cupom: CupomCreateOneInput
}

input PaymentCreateWithoutCustomerInput {
  paymentId: String
  type: String!
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String!
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardCreateOneInput
  article: ArticleCreateOneWithoutPaymentInput!
  cupom: CupomCreateOneInput
}

"""An edge in a connection."""
type PaymentEdge {
  """The item at the end of the edge."""
  node: Payment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PaymentOrderByInput {
  id_ASC
  id_DESC
  paymentId_ASC
  paymentId_DESC
  type_ASC
  type_DESC
  currency_ASC
  currency_DESC
  url_ASC
  url_DESC
  boletoNumber_ASC
  boletoNumber_DESC
  barCodeNumber_ASC
  barCodeNumber_DESC
  digitableLine_ASC
  digitableLine_DESC
  expirationDate_ASC
  expirationDate_DESC
  instructions_ASC
  instructions_DESC
  demonstrative_ASC
  demonstrative_DESC
  assignor_ASC
  assignor_DESC
  identification_ASC
  identification_DESC
  merchantOrderId_ASC
  merchantOrderId_DESC
  customerName_ASC
  customerName_DESC
  tid_ASC
  tid_DESC
  proofOfSale_ASC
  proofOfSale_DESC
  authorizationCode_ASC
  authorizationCode_DESC
  softDescriptor_ASC
  softDescriptor_DESC
  provider_ASC
  provider_DESC
  amount_ASC
  amount_DESC
  serviceTaxAmount_ASC
  serviceTaxAmount_DESC
  installments_ASC
  installments_DESC
  interest_ASC
  interest_DESC
  capture_ASC
  capture_DESC
  authenticate_ASC
  authenticate_DESC
  recurrent_ASC
  recurrent_DESC
  receivedDate_ASC
  receivedDate_DESC
  status_ASC
  status_DESC
  isSplitted_ASC
  isSplitted_DESC
  returnMessage_ASC
  returnMessage_DESC
  returnCode_ASC
  returnCode_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PaymentPreviousValues {
  id: ID!
  paymentId: String
  type: String!
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String!
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

input PaymentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  paymentId: String

  """All values that are not equal to given value."""
  paymentId_not: String

  """All values that are contained in given list."""
  paymentId_in: [String!]

  """All values that are not contained in given list."""
  paymentId_not_in: [String!]

  """All values less than the given value."""
  paymentId_lt: String

  """All values less than or equal the given value."""
  paymentId_lte: String

  """All values greater than the given value."""
  paymentId_gt: String

  """All values greater than or equal the given value."""
  paymentId_gte: String

  """All values containing the given string."""
  paymentId_contains: String

  """All values not containing the given string."""
  paymentId_not_contains: String

  """All values starting with the given string."""
  paymentId_starts_with: String

  """All values not starting with the given string."""
  paymentId_not_starts_with: String

  """All values ending with the given string."""
  paymentId_ends_with: String

  """All values not ending with the given string."""
  paymentId_not_ends_with: String
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  currency: String

  """All values that are not equal to given value."""
  currency_not: String

  """All values that are contained in given list."""
  currency_in: [String!]

  """All values that are not contained in given list."""
  currency_not_in: [String!]

  """All values less than the given value."""
  currency_lt: String

  """All values less than or equal the given value."""
  currency_lte: String

  """All values greater than the given value."""
  currency_gt: String

  """All values greater than or equal the given value."""
  currency_gte: String

  """All values containing the given string."""
  currency_contains: String

  """All values not containing the given string."""
  currency_not_contains: String

  """All values starting with the given string."""
  currency_starts_with: String

  """All values not starting with the given string."""
  currency_not_starts_with: String

  """All values ending with the given string."""
  currency_ends_with: String

  """All values not ending with the given string."""
  currency_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  boletoNumber: String

  """All values that are not equal to given value."""
  boletoNumber_not: String

  """All values that are contained in given list."""
  boletoNumber_in: [String!]

  """All values that are not contained in given list."""
  boletoNumber_not_in: [String!]

  """All values less than the given value."""
  boletoNumber_lt: String

  """All values less than or equal the given value."""
  boletoNumber_lte: String

  """All values greater than the given value."""
  boletoNumber_gt: String

  """All values greater than or equal the given value."""
  boletoNumber_gte: String

  """All values containing the given string."""
  boletoNumber_contains: String

  """All values not containing the given string."""
  boletoNumber_not_contains: String

  """All values starting with the given string."""
  boletoNumber_starts_with: String

  """All values not starting with the given string."""
  boletoNumber_not_starts_with: String

  """All values ending with the given string."""
  boletoNumber_ends_with: String

  """All values not ending with the given string."""
  boletoNumber_not_ends_with: String
  barCodeNumber: String

  """All values that are not equal to given value."""
  barCodeNumber_not: String

  """All values that are contained in given list."""
  barCodeNumber_in: [String!]

  """All values that are not contained in given list."""
  barCodeNumber_not_in: [String!]

  """All values less than the given value."""
  barCodeNumber_lt: String

  """All values less than or equal the given value."""
  barCodeNumber_lte: String

  """All values greater than the given value."""
  barCodeNumber_gt: String

  """All values greater than or equal the given value."""
  barCodeNumber_gte: String

  """All values containing the given string."""
  barCodeNumber_contains: String

  """All values not containing the given string."""
  barCodeNumber_not_contains: String

  """All values starting with the given string."""
  barCodeNumber_starts_with: String

  """All values not starting with the given string."""
  barCodeNumber_not_starts_with: String

  """All values ending with the given string."""
  barCodeNumber_ends_with: String

  """All values not ending with the given string."""
  barCodeNumber_not_ends_with: String
  digitableLine: String

  """All values that are not equal to given value."""
  digitableLine_not: String

  """All values that are contained in given list."""
  digitableLine_in: [String!]

  """All values that are not contained in given list."""
  digitableLine_not_in: [String!]

  """All values less than the given value."""
  digitableLine_lt: String

  """All values less than or equal the given value."""
  digitableLine_lte: String

  """All values greater than the given value."""
  digitableLine_gt: String

  """All values greater than or equal the given value."""
  digitableLine_gte: String

  """All values containing the given string."""
  digitableLine_contains: String

  """All values not containing the given string."""
  digitableLine_not_contains: String

  """All values starting with the given string."""
  digitableLine_starts_with: String

  """All values not starting with the given string."""
  digitableLine_not_starts_with: String

  """All values ending with the given string."""
  digitableLine_ends_with: String

  """All values not ending with the given string."""
  digitableLine_not_ends_with: String
  expirationDate: String

  """All values that are not equal to given value."""
  expirationDate_not: String

  """All values that are contained in given list."""
  expirationDate_in: [String!]

  """All values that are not contained in given list."""
  expirationDate_not_in: [String!]

  """All values less than the given value."""
  expirationDate_lt: String

  """All values less than or equal the given value."""
  expirationDate_lte: String

  """All values greater than the given value."""
  expirationDate_gt: String

  """All values greater than or equal the given value."""
  expirationDate_gte: String

  """All values containing the given string."""
  expirationDate_contains: String

  """All values not containing the given string."""
  expirationDate_not_contains: String

  """All values starting with the given string."""
  expirationDate_starts_with: String

  """All values not starting with the given string."""
  expirationDate_not_starts_with: String

  """All values ending with the given string."""
  expirationDate_ends_with: String

  """All values not ending with the given string."""
  expirationDate_not_ends_with: String
  instructions: String

  """All values that are not equal to given value."""
  instructions_not: String

  """All values that are contained in given list."""
  instructions_in: [String!]

  """All values that are not contained in given list."""
  instructions_not_in: [String!]

  """All values less than the given value."""
  instructions_lt: String

  """All values less than or equal the given value."""
  instructions_lte: String

  """All values greater than the given value."""
  instructions_gt: String

  """All values greater than or equal the given value."""
  instructions_gte: String

  """All values containing the given string."""
  instructions_contains: String

  """All values not containing the given string."""
  instructions_not_contains: String

  """All values starting with the given string."""
  instructions_starts_with: String

  """All values not starting with the given string."""
  instructions_not_starts_with: String

  """All values ending with the given string."""
  instructions_ends_with: String

  """All values not ending with the given string."""
  instructions_not_ends_with: String
  demonstrative: String

  """All values that are not equal to given value."""
  demonstrative_not: String

  """All values that are contained in given list."""
  demonstrative_in: [String!]

  """All values that are not contained in given list."""
  demonstrative_not_in: [String!]

  """All values less than the given value."""
  demonstrative_lt: String

  """All values less than or equal the given value."""
  demonstrative_lte: String

  """All values greater than the given value."""
  demonstrative_gt: String

  """All values greater than or equal the given value."""
  demonstrative_gte: String

  """All values containing the given string."""
  demonstrative_contains: String

  """All values not containing the given string."""
  demonstrative_not_contains: String

  """All values starting with the given string."""
  demonstrative_starts_with: String

  """All values not starting with the given string."""
  demonstrative_not_starts_with: String

  """All values ending with the given string."""
  demonstrative_ends_with: String

  """All values not ending with the given string."""
  demonstrative_not_ends_with: String
  assignor: String

  """All values that are not equal to given value."""
  assignor_not: String

  """All values that are contained in given list."""
  assignor_in: [String!]

  """All values that are not contained in given list."""
  assignor_not_in: [String!]

  """All values less than the given value."""
  assignor_lt: String

  """All values less than or equal the given value."""
  assignor_lte: String

  """All values greater than the given value."""
  assignor_gt: String

  """All values greater than or equal the given value."""
  assignor_gte: String

  """All values containing the given string."""
  assignor_contains: String

  """All values not containing the given string."""
  assignor_not_contains: String

  """All values starting with the given string."""
  assignor_starts_with: String

  """All values not starting with the given string."""
  assignor_not_starts_with: String

  """All values ending with the given string."""
  assignor_ends_with: String

  """All values not ending with the given string."""
  assignor_not_ends_with: String
  identification: String

  """All values that are not equal to given value."""
  identification_not: String

  """All values that are contained in given list."""
  identification_in: [String!]

  """All values that are not contained in given list."""
  identification_not_in: [String!]

  """All values less than the given value."""
  identification_lt: String

  """All values less than or equal the given value."""
  identification_lte: String

  """All values greater than the given value."""
  identification_gt: String

  """All values greater than or equal the given value."""
  identification_gte: String

  """All values containing the given string."""
  identification_contains: String

  """All values not containing the given string."""
  identification_not_contains: String

  """All values starting with the given string."""
  identification_starts_with: String

  """All values not starting with the given string."""
  identification_not_starts_with: String

  """All values ending with the given string."""
  identification_ends_with: String

  """All values not ending with the given string."""
  identification_not_ends_with: String
  merchantOrderId: String

  """All values that are not equal to given value."""
  merchantOrderId_not: String

  """All values that are contained in given list."""
  merchantOrderId_in: [String!]

  """All values that are not contained in given list."""
  merchantOrderId_not_in: [String!]

  """All values less than the given value."""
  merchantOrderId_lt: String

  """All values less than or equal the given value."""
  merchantOrderId_lte: String

  """All values greater than the given value."""
  merchantOrderId_gt: String

  """All values greater than or equal the given value."""
  merchantOrderId_gte: String

  """All values containing the given string."""
  merchantOrderId_contains: String

  """All values not containing the given string."""
  merchantOrderId_not_contains: String

  """All values starting with the given string."""
  merchantOrderId_starts_with: String

  """All values not starting with the given string."""
  merchantOrderId_not_starts_with: String

  """All values ending with the given string."""
  merchantOrderId_ends_with: String

  """All values not ending with the given string."""
  merchantOrderId_not_ends_with: String
  customerName: String

  """All values that are not equal to given value."""
  customerName_not: String

  """All values that are contained in given list."""
  customerName_in: [String!]

  """All values that are not contained in given list."""
  customerName_not_in: [String!]

  """All values less than the given value."""
  customerName_lt: String

  """All values less than or equal the given value."""
  customerName_lte: String

  """All values greater than the given value."""
  customerName_gt: String

  """All values greater than or equal the given value."""
  customerName_gte: String

  """All values containing the given string."""
  customerName_contains: String

  """All values not containing the given string."""
  customerName_not_contains: String

  """All values starting with the given string."""
  customerName_starts_with: String

  """All values not starting with the given string."""
  customerName_not_starts_with: String

  """All values ending with the given string."""
  customerName_ends_with: String

  """All values not ending with the given string."""
  customerName_not_ends_with: String
  tid: String

  """All values that are not equal to given value."""
  tid_not: String

  """All values that are contained in given list."""
  tid_in: [String!]

  """All values that are not contained in given list."""
  tid_not_in: [String!]

  """All values less than the given value."""
  tid_lt: String

  """All values less than or equal the given value."""
  tid_lte: String

  """All values greater than the given value."""
  tid_gt: String

  """All values greater than or equal the given value."""
  tid_gte: String

  """All values containing the given string."""
  tid_contains: String

  """All values not containing the given string."""
  tid_not_contains: String

  """All values starting with the given string."""
  tid_starts_with: String

  """All values not starting with the given string."""
  tid_not_starts_with: String

  """All values ending with the given string."""
  tid_ends_with: String

  """All values not ending with the given string."""
  tid_not_ends_with: String
  proofOfSale: String

  """All values that are not equal to given value."""
  proofOfSale_not: String

  """All values that are contained in given list."""
  proofOfSale_in: [String!]

  """All values that are not contained in given list."""
  proofOfSale_not_in: [String!]

  """All values less than the given value."""
  proofOfSale_lt: String

  """All values less than or equal the given value."""
  proofOfSale_lte: String

  """All values greater than the given value."""
  proofOfSale_gt: String

  """All values greater than or equal the given value."""
  proofOfSale_gte: String

  """All values containing the given string."""
  proofOfSale_contains: String

  """All values not containing the given string."""
  proofOfSale_not_contains: String

  """All values starting with the given string."""
  proofOfSale_starts_with: String

  """All values not starting with the given string."""
  proofOfSale_not_starts_with: String

  """All values ending with the given string."""
  proofOfSale_ends_with: String

  """All values not ending with the given string."""
  proofOfSale_not_ends_with: String
  authorizationCode: String

  """All values that are not equal to given value."""
  authorizationCode_not: String

  """All values that are contained in given list."""
  authorizationCode_in: [String!]

  """All values that are not contained in given list."""
  authorizationCode_not_in: [String!]

  """All values less than the given value."""
  authorizationCode_lt: String

  """All values less than or equal the given value."""
  authorizationCode_lte: String

  """All values greater than the given value."""
  authorizationCode_gt: String

  """All values greater than or equal the given value."""
  authorizationCode_gte: String

  """All values containing the given string."""
  authorizationCode_contains: String

  """All values not containing the given string."""
  authorizationCode_not_contains: String

  """All values starting with the given string."""
  authorizationCode_starts_with: String

  """All values not starting with the given string."""
  authorizationCode_not_starts_with: String

  """All values ending with the given string."""
  authorizationCode_ends_with: String

  """All values not ending with the given string."""
  authorizationCode_not_ends_with: String
  softDescriptor: String

  """All values that are not equal to given value."""
  softDescriptor_not: String

  """All values that are contained in given list."""
  softDescriptor_in: [String!]

  """All values that are not contained in given list."""
  softDescriptor_not_in: [String!]

  """All values less than the given value."""
  softDescriptor_lt: String

  """All values less than or equal the given value."""
  softDescriptor_lte: String

  """All values greater than the given value."""
  softDescriptor_gt: String

  """All values greater than or equal the given value."""
  softDescriptor_gte: String

  """All values containing the given string."""
  softDescriptor_contains: String

  """All values not containing the given string."""
  softDescriptor_not_contains: String

  """All values starting with the given string."""
  softDescriptor_starts_with: String

  """All values not starting with the given string."""
  softDescriptor_not_starts_with: String

  """All values ending with the given string."""
  softDescriptor_ends_with: String

  """All values not ending with the given string."""
  softDescriptor_not_ends_with: String
  provider: String

  """All values that are not equal to given value."""
  provider_not: String

  """All values that are contained in given list."""
  provider_in: [String!]

  """All values that are not contained in given list."""
  provider_not_in: [String!]

  """All values less than the given value."""
  provider_lt: String

  """All values less than or equal the given value."""
  provider_lte: String

  """All values greater than the given value."""
  provider_gt: String

  """All values greater than or equal the given value."""
  provider_gte: String

  """All values containing the given string."""
  provider_contains: String

  """All values not containing the given string."""
  provider_not_contains: String

  """All values starting with the given string."""
  provider_starts_with: String

  """All values not starting with the given string."""
  provider_not_starts_with: String

  """All values ending with the given string."""
  provider_ends_with: String

  """All values not ending with the given string."""
  provider_not_ends_with: String
  amount: Int

  """All values that are not equal to given value."""
  amount_not: Int

  """All values that are contained in given list."""
  amount_in: [Int!]

  """All values that are not contained in given list."""
  amount_not_in: [Int!]

  """All values less than the given value."""
  amount_lt: Int

  """All values less than or equal the given value."""
  amount_lte: Int

  """All values greater than the given value."""
  amount_gt: Int

  """All values greater than or equal the given value."""
  amount_gte: Int
  serviceTaxAmount: Int

  """All values that are not equal to given value."""
  serviceTaxAmount_not: Int

  """All values that are contained in given list."""
  serviceTaxAmount_in: [Int!]

  """All values that are not contained in given list."""
  serviceTaxAmount_not_in: [Int!]

  """All values less than the given value."""
  serviceTaxAmount_lt: Int

  """All values less than or equal the given value."""
  serviceTaxAmount_lte: Int

  """All values greater than the given value."""
  serviceTaxAmount_gt: Int

  """All values greater than or equal the given value."""
  serviceTaxAmount_gte: Int
  installments: Int

  """All values that are not equal to given value."""
  installments_not: Int

  """All values that are contained in given list."""
  installments_in: [Int!]

  """All values that are not contained in given list."""
  installments_not_in: [Int!]

  """All values less than the given value."""
  installments_lt: Int

  """All values less than or equal the given value."""
  installments_lte: Int

  """All values greater than the given value."""
  installments_gt: Int

  """All values greater than or equal the given value."""
  installments_gte: Int
  interest: Int

  """All values that are not equal to given value."""
  interest_not: Int

  """All values that are contained in given list."""
  interest_in: [Int!]

  """All values that are not contained in given list."""
  interest_not_in: [Int!]

  """All values less than the given value."""
  interest_lt: Int

  """All values less than or equal the given value."""
  interest_lte: Int

  """All values greater than the given value."""
  interest_gt: Int

  """All values greater than or equal the given value."""
  interest_gte: Int
  capture: Boolean

  """All values that are not equal to given value."""
  capture_not: Boolean
  authenticate: Boolean

  """All values that are not equal to given value."""
  authenticate_not: Boolean
  recurrent: Boolean

  """All values that are not equal to given value."""
  recurrent_not: Boolean
  receivedDate: DateTime

  """All values that are not equal to given value."""
  receivedDate_not: DateTime

  """All values that are contained in given list."""
  receivedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  receivedDate_not_in: [DateTime!]

  """All values less than the given value."""
  receivedDate_lt: DateTime

  """All values less than or equal the given value."""
  receivedDate_lte: DateTime

  """All values greater than the given value."""
  receivedDate_gt: DateTime

  """All values greater than or equal the given value."""
  receivedDate_gte: DateTime
  status: Int

  """All values that are not equal to given value."""
  status_not: Int

  """All values that are contained in given list."""
  status_in: [Int!]

  """All values that are not contained in given list."""
  status_not_in: [Int!]

  """All values less than the given value."""
  status_lt: Int

  """All values less than or equal the given value."""
  status_lte: Int

  """All values greater than the given value."""
  status_gt: Int

  """All values greater than or equal the given value."""
  status_gte: Int
  isSplitted: Boolean

  """All values that are not equal to given value."""
  isSplitted_not: Boolean
  returnMessage: String

  """All values that are not equal to given value."""
  returnMessage_not: String

  """All values that are contained in given list."""
  returnMessage_in: [String!]

  """All values that are not contained in given list."""
  returnMessage_not_in: [String!]

  """All values less than the given value."""
  returnMessage_lt: String

  """All values less than or equal the given value."""
  returnMessage_lte: String

  """All values greater than the given value."""
  returnMessage_gt: String

  """All values greater than or equal the given value."""
  returnMessage_gte: String

  """All values containing the given string."""
  returnMessage_contains: String

  """All values not containing the given string."""
  returnMessage_not_contains: String

  """All values starting with the given string."""
  returnMessage_starts_with: String

  """All values not starting with the given string."""
  returnMessage_not_starts_with: String

  """All values ending with the given string."""
  returnMessage_ends_with: String

  """All values not ending with the given string."""
  returnMessage_not_ends_with: String
  returnCode: String

  """All values that are not equal to given value."""
  returnCode_not: String

  """All values that are contained in given list."""
  returnCode_in: [String!]

  """All values that are not contained in given list."""
  returnCode_not_in: [String!]

  """All values less than the given value."""
  returnCode_lt: String

  """All values less than or equal the given value."""
  returnCode_lte: String

  """All values greater than the given value."""
  returnCode_gt: String

  """All values greater than or equal the given value."""
  returnCode_gte: String

  """All values containing the given string."""
  returnCode_contains: String

  """All values not containing the given string."""
  returnCode_not_contains: String

  """All values starting with the given string."""
  returnCode_starts_with: String

  """All values not starting with the given string."""
  returnCode_not_starts_with: String

  """All values ending with the given string."""
  returnCode_ends_with: String

  """All values not ending with the given string."""
  returnCode_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
}

type PaymentSubscriptionPayload {
  mutation: MutationType!
  node: Payment
  updatedFields: [String!]
  previousValues: PaymentPreviousValues
}

input PaymentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PaymentWhereInput
}

input PaymentUpdateInput {
  paymentId: String
  type: String
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardUpdateOneInput
  customer: UserUpdateOneRequiredWithoutPaymentsInput
  article: ArticleUpdateOneRequiredWithoutPaymentInput
  cupom: CupomUpdateOneInput
}

input PaymentUpdateManyDataInput {
  paymentId: String
  type: String
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
}

input PaymentUpdateManyMutationInput {
  paymentId: String
  type: String
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
}

input PaymentUpdateManyWithoutCustomerInput {
  create: [PaymentCreateWithoutCustomerInput!]
  connect: [PaymentWhereUniqueInput!]
  disconnect: [PaymentWhereUniqueInput!]
  delete: [PaymentWhereUniqueInput!]
  update: [PaymentUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [PaymentUpdateManyWithWhereNestedInput!]
  deleteMany: [PaymentScalarWhereInput!]
  upsert: [PaymentUpsertWithWhereUniqueWithoutCustomerInput!]
}

input PaymentUpdateManyWithWhereNestedInput {
  where: PaymentScalarWhereInput!
  data: PaymentUpdateManyDataInput!
}

input PaymentUpdateOneWithoutArticleInput {
  create: PaymentCreateWithoutArticleInput
  connect: PaymentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PaymentUpdateWithoutArticleDataInput
  upsert: PaymentUpsertWithoutArticleInput
}

input PaymentUpdateWithoutArticleDataInput {
  paymentId: String
  type: String
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardUpdateOneInput
  customer: UserUpdateOneRequiredWithoutPaymentsInput
  cupom: CupomUpdateOneInput
}

input PaymentUpdateWithoutCustomerDataInput {
  paymentId: String
  type: String
  currency: String
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  merchantOrderId: String
  customerName: String
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean
  authenticate: Boolean
  recurrent: Boolean
  receivedDate: DateTime
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  creditCard: CreditCardUpdateOneInput
  article: ArticleUpdateOneRequiredWithoutPaymentInput
  cupom: CupomUpdateOneInput
}

input PaymentUpdateWithWhereUniqueWithoutCustomerInput {
  where: PaymentWhereUniqueInput!
  data: PaymentUpdateWithoutCustomerDataInput!
}

input PaymentUpsertWithoutArticleInput {
  update: PaymentUpdateWithoutArticleDataInput!
  create: PaymentCreateWithoutArticleInput!
}

input PaymentUpsertWithWhereUniqueWithoutCustomerInput {
  where: PaymentWhereUniqueInput!
  update: PaymentUpdateWithoutCustomerDataInput!
  create: PaymentCreateWithoutCustomerInput!
}

input PaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  paymentId: String

  """All values that are not equal to given value."""
  paymentId_not: String

  """All values that are contained in given list."""
  paymentId_in: [String!]

  """All values that are not contained in given list."""
  paymentId_not_in: [String!]

  """All values less than the given value."""
  paymentId_lt: String

  """All values less than or equal the given value."""
  paymentId_lte: String

  """All values greater than the given value."""
  paymentId_gt: String

  """All values greater than or equal the given value."""
  paymentId_gte: String

  """All values containing the given string."""
  paymentId_contains: String

  """All values not containing the given string."""
  paymentId_not_contains: String

  """All values starting with the given string."""
  paymentId_starts_with: String

  """All values not starting with the given string."""
  paymentId_not_starts_with: String

  """All values ending with the given string."""
  paymentId_ends_with: String

  """All values not ending with the given string."""
  paymentId_not_ends_with: String
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  currency: String

  """All values that are not equal to given value."""
  currency_not: String

  """All values that are contained in given list."""
  currency_in: [String!]

  """All values that are not contained in given list."""
  currency_not_in: [String!]

  """All values less than the given value."""
  currency_lt: String

  """All values less than or equal the given value."""
  currency_lte: String

  """All values greater than the given value."""
  currency_gt: String

  """All values greater than or equal the given value."""
  currency_gte: String

  """All values containing the given string."""
  currency_contains: String

  """All values not containing the given string."""
  currency_not_contains: String

  """All values starting with the given string."""
  currency_starts_with: String

  """All values not starting with the given string."""
  currency_not_starts_with: String

  """All values ending with the given string."""
  currency_ends_with: String

  """All values not ending with the given string."""
  currency_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  boletoNumber: String

  """All values that are not equal to given value."""
  boletoNumber_not: String

  """All values that are contained in given list."""
  boletoNumber_in: [String!]

  """All values that are not contained in given list."""
  boletoNumber_not_in: [String!]

  """All values less than the given value."""
  boletoNumber_lt: String

  """All values less than or equal the given value."""
  boletoNumber_lte: String

  """All values greater than the given value."""
  boletoNumber_gt: String

  """All values greater than or equal the given value."""
  boletoNumber_gte: String

  """All values containing the given string."""
  boletoNumber_contains: String

  """All values not containing the given string."""
  boletoNumber_not_contains: String

  """All values starting with the given string."""
  boletoNumber_starts_with: String

  """All values not starting with the given string."""
  boletoNumber_not_starts_with: String

  """All values ending with the given string."""
  boletoNumber_ends_with: String

  """All values not ending with the given string."""
  boletoNumber_not_ends_with: String
  barCodeNumber: String

  """All values that are not equal to given value."""
  barCodeNumber_not: String

  """All values that are contained in given list."""
  barCodeNumber_in: [String!]

  """All values that are not contained in given list."""
  barCodeNumber_not_in: [String!]

  """All values less than the given value."""
  barCodeNumber_lt: String

  """All values less than or equal the given value."""
  barCodeNumber_lte: String

  """All values greater than the given value."""
  barCodeNumber_gt: String

  """All values greater than or equal the given value."""
  barCodeNumber_gte: String

  """All values containing the given string."""
  barCodeNumber_contains: String

  """All values not containing the given string."""
  barCodeNumber_not_contains: String

  """All values starting with the given string."""
  barCodeNumber_starts_with: String

  """All values not starting with the given string."""
  barCodeNumber_not_starts_with: String

  """All values ending with the given string."""
  barCodeNumber_ends_with: String

  """All values not ending with the given string."""
  barCodeNumber_not_ends_with: String
  digitableLine: String

  """All values that are not equal to given value."""
  digitableLine_not: String

  """All values that are contained in given list."""
  digitableLine_in: [String!]

  """All values that are not contained in given list."""
  digitableLine_not_in: [String!]

  """All values less than the given value."""
  digitableLine_lt: String

  """All values less than or equal the given value."""
  digitableLine_lte: String

  """All values greater than the given value."""
  digitableLine_gt: String

  """All values greater than or equal the given value."""
  digitableLine_gte: String

  """All values containing the given string."""
  digitableLine_contains: String

  """All values not containing the given string."""
  digitableLine_not_contains: String

  """All values starting with the given string."""
  digitableLine_starts_with: String

  """All values not starting with the given string."""
  digitableLine_not_starts_with: String

  """All values ending with the given string."""
  digitableLine_ends_with: String

  """All values not ending with the given string."""
  digitableLine_not_ends_with: String
  expirationDate: String

  """All values that are not equal to given value."""
  expirationDate_not: String

  """All values that are contained in given list."""
  expirationDate_in: [String!]

  """All values that are not contained in given list."""
  expirationDate_not_in: [String!]

  """All values less than the given value."""
  expirationDate_lt: String

  """All values less than or equal the given value."""
  expirationDate_lte: String

  """All values greater than the given value."""
  expirationDate_gt: String

  """All values greater than or equal the given value."""
  expirationDate_gte: String

  """All values containing the given string."""
  expirationDate_contains: String

  """All values not containing the given string."""
  expirationDate_not_contains: String

  """All values starting with the given string."""
  expirationDate_starts_with: String

  """All values not starting with the given string."""
  expirationDate_not_starts_with: String

  """All values ending with the given string."""
  expirationDate_ends_with: String

  """All values not ending with the given string."""
  expirationDate_not_ends_with: String
  instructions: String

  """All values that are not equal to given value."""
  instructions_not: String

  """All values that are contained in given list."""
  instructions_in: [String!]

  """All values that are not contained in given list."""
  instructions_not_in: [String!]

  """All values less than the given value."""
  instructions_lt: String

  """All values less than or equal the given value."""
  instructions_lte: String

  """All values greater than the given value."""
  instructions_gt: String

  """All values greater than or equal the given value."""
  instructions_gte: String

  """All values containing the given string."""
  instructions_contains: String

  """All values not containing the given string."""
  instructions_not_contains: String

  """All values starting with the given string."""
  instructions_starts_with: String

  """All values not starting with the given string."""
  instructions_not_starts_with: String

  """All values ending with the given string."""
  instructions_ends_with: String

  """All values not ending with the given string."""
  instructions_not_ends_with: String
  demonstrative: String

  """All values that are not equal to given value."""
  demonstrative_not: String

  """All values that are contained in given list."""
  demonstrative_in: [String!]

  """All values that are not contained in given list."""
  demonstrative_not_in: [String!]

  """All values less than the given value."""
  demonstrative_lt: String

  """All values less than or equal the given value."""
  demonstrative_lte: String

  """All values greater than the given value."""
  demonstrative_gt: String

  """All values greater than or equal the given value."""
  demonstrative_gte: String

  """All values containing the given string."""
  demonstrative_contains: String

  """All values not containing the given string."""
  demonstrative_not_contains: String

  """All values starting with the given string."""
  demonstrative_starts_with: String

  """All values not starting with the given string."""
  demonstrative_not_starts_with: String

  """All values ending with the given string."""
  demonstrative_ends_with: String

  """All values not ending with the given string."""
  demonstrative_not_ends_with: String
  assignor: String

  """All values that are not equal to given value."""
  assignor_not: String

  """All values that are contained in given list."""
  assignor_in: [String!]

  """All values that are not contained in given list."""
  assignor_not_in: [String!]

  """All values less than the given value."""
  assignor_lt: String

  """All values less than or equal the given value."""
  assignor_lte: String

  """All values greater than the given value."""
  assignor_gt: String

  """All values greater than or equal the given value."""
  assignor_gte: String

  """All values containing the given string."""
  assignor_contains: String

  """All values not containing the given string."""
  assignor_not_contains: String

  """All values starting with the given string."""
  assignor_starts_with: String

  """All values not starting with the given string."""
  assignor_not_starts_with: String

  """All values ending with the given string."""
  assignor_ends_with: String

  """All values not ending with the given string."""
  assignor_not_ends_with: String
  identification: String

  """All values that are not equal to given value."""
  identification_not: String

  """All values that are contained in given list."""
  identification_in: [String!]

  """All values that are not contained in given list."""
  identification_not_in: [String!]

  """All values less than the given value."""
  identification_lt: String

  """All values less than or equal the given value."""
  identification_lte: String

  """All values greater than the given value."""
  identification_gt: String

  """All values greater than or equal the given value."""
  identification_gte: String

  """All values containing the given string."""
  identification_contains: String

  """All values not containing the given string."""
  identification_not_contains: String

  """All values starting with the given string."""
  identification_starts_with: String

  """All values not starting with the given string."""
  identification_not_starts_with: String

  """All values ending with the given string."""
  identification_ends_with: String

  """All values not ending with the given string."""
  identification_not_ends_with: String
  merchantOrderId: String

  """All values that are not equal to given value."""
  merchantOrderId_not: String

  """All values that are contained in given list."""
  merchantOrderId_in: [String!]

  """All values that are not contained in given list."""
  merchantOrderId_not_in: [String!]

  """All values less than the given value."""
  merchantOrderId_lt: String

  """All values less than or equal the given value."""
  merchantOrderId_lte: String

  """All values greater than the given value."""
  merchantOrderId_gt: String

  """All values greater than or equal the given value."""
  merchantOrderId_gte: String

  """All values containing the given string."""
  merchantOrderId_contains: String

  """All values not containing the given string."""
  merchantOrderId_not_contains: String

  """All values starting with the given string."""
  merchantOrderId_starts_with: String

  """All values not starting with the given string."""
  merchantOrderId_not_starts_with: String

  """All values ending with the given string."""
  merchantOrderId_ends_with: String

  """All values not ending with the given string."""
  merchantOrderId_not_ends_with: String
  customerName: String

  """All values that are not equal to given value."""
  customerName_not: String

  """All values that are contained in given list."""
  customerName_in: [String!]

  """All values that are not contained in given list."""
  customerName_not_in: [String!]

  """All values less than the given value."""
  customerName_lt: String

  """All values less than or equal the given value."""
  customerName_lte: String

  """All values greater than the given value."""
  customerName_gt: String

  """All values greater than or equal the given value."""
  customerName_gte: String

  """All values containing the given string."""
  customerName_contains: String

  """All values not containing the given string."""
  customerName_not_contains: String

  """All values starting with the given string."""
  customerName_starts_with: String

  """All values not starting with the given string."""
  customerName_not_starts_with: String

  """All values ending with the given string."""
  customerName_ends_with: String

  """All values not ending with the given string."""
  customerName_not_ends_with: String
  tid: String

  """All values that are not equal to given value."""
  tid_not: String

  """All values that are contained in given list."""
  tid_in: [String!]

  """All values that are not contained in given list."""
  tid_not_in: [String!]

  """All values less than the given value."""
  tid_lt: String

  """All values less than or equal the given value."""
  tid_lte: String

  """All values greater than the given value."""
  tid_gt: String

  """All values greater than or equal the given value."""
  tid_gte: String

  """All values containing the given string."""
  tid_contains: String

  """All values not containing the given string."""
  tid_not_contains: String

  """All values starting with the given string."""
  tid_starts_with: String

  """All values not starting with the given string."""
  tid_not_starts_with: String

  """All values ending with the given string."""
  tid_ends_with: String

  """All values not ending with the given string."""
  tid_not_ends_with: String
  proofOfSale: String

  """All values that are not equal to given value."""
  proofOfSale_not: String

  """All values that are contained in given list."""
  proofOfSale_in: [String!]

  """All values that are not contained in given list."""
  proofOfSale_not_in: [String!]

  """All values less than the given value."""
  proofOfSale_lt: String

  """All values less than or equal the given value."""
  proofOfSale_lte: String

  """All values greater than the given value."""
  proofOfSale_gt: String

  """All values greater than or equal the given value."""
  proofOfSale_gte: String

  """All values containing the given string."""
  proofOfSale_contains: String

  """All values not containing the given string."""
  proofOfSale_not_contains: String

  """All values starting with the given string."""
  proofOfSale_starts_with: String

  """All values not starting with the given string."""
  proofOfSale_not_starts_with: String

  """All values ending with the given string."""
  proofOfSale_ends_with: String

  """All values not ending with the given string."""
  proofOfSale_not_ends_with: String
  authorizationCode: String

  """All values that are not equal to given value."""
  authorizationCode_not: String

  """All values that are contained in given list."""
  authorizationCode_in: [String!]

  """All values that are not contained in given list."""
  authorizationCode_not_in: [String!]

  """All values less than the given value."""
  authorizationCode_lt: String

  """All values less than or equal the given value."""
  authorizationCode_lte: String

  """All values greater than the given value."""
  authorizationCode_gt: String

  """All values greater than or equal the given value."""
  authorizationCode_gte: String

  """All values containing the given string."""
  authorizationCode_contains: String

  """All values not containing the given string."""
  authorizationCode_not_contains: String

  """All values starting with the given string."""
  authorizationCode_starts_with: String

  """All values not starting with the given string."""
  authorizationCode_not_starts_with: String

  """All values ending with the given string."""
  authorizationCode_ends_with: String

  """All values not ending with the given string."""
  authorizationCode_not_ends_with: String
  softDescriptor: String

  """All values that are not equal to given value."""
  softDescriptor_not: String

  """All values that are contained in given list."""
  softDescriptor_in: [String!]

  """All values that are not contained in given list."""
  softDescriptor_not_in: [String!]

  """All values less than the given value."""
  softDescriptor_lt: String

  """All values less than or equal the given value."""
  softDescriptor_lte: String

  """All values greater than the given value."""
  softDescriptor_gt: String

  """All values greater than or equal the given value."""
  softDescriptor_gte: String

  """All values containing the given string."""
  softDescriptor_contains: String

  """All values not containing the given string."""
  softDescriptor_not_contains: String

  """All values starting with the given string."""
  softDescriptor_starts_with: String

  """All values not starting with the given string."""
  softDescriptor_not_starts_with: String

  """All values ending with the given string."""
  softDescriptor_ends_with: String

  """All values not ending with the given string."""
  softDescriptor_not_ends_with: String
  provider: String

  """All values that are not equal to given value."""
  provider_not: String

  """All values that are contained in given list."""
  provider_in: [String!]

  """All values that are not contained in given list."""
  provider_not_in: [String!]

  """All values less than the given value."""
  provider_lt: String

  """All values less than or equal the given value."""
  provider_lte: String

  """All values greater than the given value."""
  provider_gt: String

  """All values greater than or equal the given value."""
  provider_gte: String

  """All values containing the given string."""
  provider_contains: String

  """All values not containing the given string."""
  provider_not_contains: String

  """All values starting with the given string."""
  provider_starts_with: String

  """All values not starting with the given string."""
  provider_not_starts_with: String

  """All values ending with the given string."""
  provider_ends_with: String

  """All values not ending with the given string."""
  provider_not_ends_with: String
  amount: Int

  """All values that are not equal to given value."""
  amount_not: Int

  """All values that are contained in given list."""
  amount_in: [Int!]

  """All values that are not contained in given list."""
  amount_not_in: [Int!]

  """All values less than the given value."""
  amount_lt: Int

  """All values less than or equal the given value."""
  amount_lte: Int

  """All values greater than the given value."""
  amount_gt: Int

  """All values greater than or equal the given value."""
  amount_gte: Int
  serviceTaxAmount: Int

  """All values that are not equal to given value."""
  serviceTaxAmount_not: Int

  """All values that are contained in given list."""
  serviceTaxAmount_in: [Int!]

  """All values that are not contained in given list."""
  serviceTaxAmount_not_in: [Int!]

  """All values less than the given value."""
  serviceTaxAmount_lt: Int

  """All values less than or equal the given value."""
  serviceTaxAmount_lte: Int

  """All values greater than the given value."""
  serviceTaxAmount_gt: Int

  """All values greater than or equal the given value."""
  serviceTaxAmount_gte: Int
  installments: Int

  """All values that are not equal to given value."""
  installments_not: Int

  """All values that are contained in given list."""
  installments_in: [Int!]

  """All values that are not contained in given list."""
  installments_not_in: [Int!]

  """All values less than the given value."""
  installments_lt: Int

  """All values less than or equal the given value."""
  installments_lte: Int

  """All values greater than the given value."""
  installments_gt: Int

  """All values greater than or equal the given value."""
  installments_gte: Int
  interest: Int

  """All values that are not equal to given value."""
  interest_not: Int

  """All values that are contained in given list."""
  interest_in: [Int!]

  """All values that are not contained in given list."""
  interest_not_in: [Int!]

  """All values less than the given value."""
  interest_lt: Int

  """All values less than or equal the given value."""
  interest_lte: Int

  """All values greater than the given value."""
  interest_gt: Int

  """All values greater than or equal the given value."""
  interest_gte: Int
  capture: Boolean

  """All values that are not equal to given value."""
  capture_not: Boolean
  authenticate: Boolean

  """All values that are not equal to given value."""
  authenticate_not: Boolean
  recurrent: Boolean

  """All values that are not equal to given value."""
  recurrent_not: Boolean
  receivedDate: DateTime

  """All values that are not equal to given value."""
  receivedDate_not: DateTime

  """All values that are contained in given list."""
  receivedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  receivedDate_not_in: [DateTime!]

  """All values less than the given value."""
  receivedDate_lt: DateTime

  """All values less than or equal the given value."""
  receivedDate_lte: DateTime

  """All values greater than the given value."""
  receivedDate_gt: DateTime

  """All values greater than or equal the given value."""
  receivedDate_gte: DateTime
  status: Int

  """All values that are not equal to given value."""
  status_not: Int

  """All values that are contained in given list."""
  status_in: [Int!]

  """All values that are not contained in given list."""
  status_not_in: [Int!]

  """All values less than the given value."""
  status_lt: Int

  """All values less than or equal the given value."""
  status_lte: Int

  """All values greater than the given value."""
  status_gt: Int

  """All values greater than or equal the given value."""
  status_gte: Int
  isSplitted: Boolean

  """All values that are not equal to given value."""
  isSplitted_not: Boolean
  returnMessage: String

  """All values that are not equal to given value."""
  returnMessage_not: String

  """All values that are contained in given list."""
  returnMessage_in: [String!]

  """All values that are not contained in given list."""
  returnMessage_not_in: [String!]

  """All values less than the given value."""
  returnMessage_lt: String

  """All values less than or equal the given value."""
  returnMessage_lte: String

  """All values greater than the given value."""
  returnMessage_gt: String

  """All values greater than or equal the given value."""
  returnMessage_gte: String

  """All values containing the given string."""
  returnMessage_contains: String

  """All values not containing the given string."""
  returnMessage_not_contains: String

  """All values starting with the given string."""
  returnMessage_starts_with: String

  """All values not starting with the given string."""
  returnMessage_not_starts_with: String

  """All values ending with the given string."""
  returnMessage_ends_with: String

  """All values not ending with the given string."""
  returnMessage_not_ends_with: String
  returnCode: String

  """All values that are not equal to given value."""
  returnCode_not: String

  """All values that are contained in given list."""
  returnCode_in: [String!]

  """All values that are not contained in given list."""
  returnCode_not_in: [String!]

  """All values less than the given value."""
  returnCode_lt: String

  """All values less than or equal the given value."""
  returnCode_lte: String

  """All values greater than the given value."""
  returnCode_gt: String

  """All values greater than or equal the given value."""
  returnCode_gte: String

  """All values containing the given string."""
  returnCode_contains: String

  """All values not containing the given string."""
  returnCode_not_contains: String

  """All values starting with the given string."""
  returnCode_starts_with: String

  """All values not starting with the given string."""
  returnCode_not_starts_with: String

  """All values ending with the given string."""
  returnCode_ends_with: String

  """All values not ending with the given string."""
  returnCode_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  creditCard: CreditCardWhereInput
  customer: UserWhereInput
  article: ArticleWhereInput
  cupom: CupomWhereInput
}

input PaymentWhereUniqueInput {
  id: ID
}

enum PrismaDatabase {
  default
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  newsletterSubscriptions(where: NewsletterSubscriptionWhereInput, orderBy: NewsletterSubscriptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NewsletterSubscription]!
  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!
  issues(where: IssueWhereInput, orderBy: IssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Issue]!
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article]!
  citations(where: CitationWhereInput, orderBy: CitationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Citation]!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment]!
  resetPasswordRequests(where: ResetPasswordRequestWhereInput, orderBy: ResetPasswordRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ResetPasswordRequest]!
  creditCards(where: CreditCardWhereInput, orderBy: CreditCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CreditCard]!
  cupoms(where: CupomWhereInput, orderBy: CupomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cupom]!
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
  user(where: UserWhereUniqueInput!): User
  newsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  issue(where: IssueWhereUniqueInput!): Issue
  article(where: ArticleWhereUniqueInput!): Article
  citation(where: CitationWhereUniqueInput!): Citation
  payment(where: PaymentWhereUniqueInput!): Payment
  resetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  creditCard(where: CreditCardWhereUniqueInput!): CreditCard
  cupom(where: CupomWhereUniqueInput!): Cupom
  file(where: FileWhereUniqueInput!): File
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  newsletterSubscriptionsConnection(where: NewsletterSubscriptionWhereInput, orderBy: NewsletterSubscriptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NewsletterSubscriptionConnection!
  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!
  issuesConnection(where: IssueWhereInput, orderBy: IssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IssueConnection!
  articlesConnection(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArticleConnection!
  citationsConnection(where: CitationWhereInput, orderBy: CitationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CitationConnection!
  paymentsConnection(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentConnection!
  resetPasswordRequestsConnection(where: ResetPasswordRequestWhereInput, orderBy: ResetPasswordRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResetPasswordRequestConnection!
  creditCardsConnection(where: CreditCardWhereInput, orderBy: CreditCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CreditCardConnection!
  cupomsConnection(where: CupomWhereInput, orderBy: CupomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CupomConnection!
  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type ResetPasswordRequest implements Node {
  id: ID!
  hash: String!
  reset: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
}

"""A connection to a list of items."""
type ResetPasswordRequestConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ResetPasswordRequestEdge]!
  aggregate: AggregateResetPasswordRequest!
}

input ResetPasswordRequestCreateInput {
  hash: String!
  reset: Boolean
  email: String!
}

"""An edge in a connection."""
type ResetPasswordRequestEdge {
  """The item at the end of the edge."""
  node: ResetPasswordRequest!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ResetPasswordRequestOrderByInput {
  id_ASC
  id_DESC
  hash_ASC
  hash_DESC
  reset_ASC
  reset_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
}

type ResetPasswordRequestPreviousValues {
  id: ID!
  hash: String!
  reset: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
}

type ResetPasswordRequestSubscriptionPayload {
  mutation: MutationType!
  node: ResetPasswordRequest
  updatedFields: [String!]
  previousValues: ResetPasswordRequestPreviousValues
}

input ResetPasswordRequestSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ResetPasswordRequestSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResetPasswordRequestSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResetPasswordRequestSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ResetPasswordRequestWhereInput
}

input ResetPasswordRequestUpdateInput {
  hash: String
  reset: Boolean
  email: String
}

input ResetPasswordRequestUpdateManyMutationInput {
  hash: String
  reset: Boolean
  email: String
}

input ResetPasswordRequestWhereInput {
  """Logical AND on all given filters."""
  AND: [ResetPasswordRequestWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResetPasswordRequestWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResetPasswordRequestWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  hash: String

  """All values that are not equal to given value."""
  hash_not: String

  """All values that are contained in given list."""
  hash_in: [String!]

  """All values that are not contained in given list."""
  hash_not_in: [String!]

  """All values less than the given value."""
  hash_lt: String

  """All values less than or equal the given value."""
  hash_lte: String

  """All values greater than the given value."""
  hash_gt: String

  """All values greater than or equal the given value."""
  hash_gte: String

  """All values containing the given string."""
  hash_contains: String

  """All values not containing the given string."""
  hash_not_contains: String

  """All values starting with the given string."""
  hash_starts_with: String

  """All values not starting with the given string."""
  hash_not_starts_with: String

  """All values ending with the given string."""
  hash_ends_with: String

  """All values not ending with the given string."""
  hash_not_ends_with: String
  reset: Boolean

  """All values that are not equal to given value."""
  reset_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
}

input ResetPasswordRequestWhereUniqueInput {
  id: ID
  hash: String
}

enum Role {
  ADMIN
  EDITOR
  READER
  AUTHOR
}

enum Section {
  ISSUEBANNER
  PODCASTS
  CALLS
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  newsletterSubscription(where: NewsletterSubscriptionSubscriptionWhereInput): NewsletterSubscriptionSubscriptionPayload
  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload
  issue(where: IssueSubscriptionWhereInput): IssueSubscriptionPayload
  article(where: ArticleSubscriptionWhereInput): ArticleSubscriptionPayload
  citation(where: CitationSubscriptionWhereInput): CitationSubscriptionPayload
  payment(where: PaymentSubscriptionWhereInput): PaymentSubscriptionPayload
  resetPasswordRequest(where: ResetPasswordRequestSubscriptionWhereInput): ResetPasswordRequestSubscriptionPayload
  creditCard(where: CreditCardSubscriptionWhereInput): CreditCardSubscriptionPayload
  cupom(where: CupomSubscriptionWhereInput): CupomSubscriptionPayload
  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  payments: PaymentCreateManyWithoutCustomerInput
  articles: ArticleCreateManyWithoutAuthorInput
}

input UserCreateOneWithoutArticlesInput {
  create: UserCreateWithoutArticlesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPaymentsInput {
  create: UserCreateWithoutPaymentsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutArticlesInput {
  email: String!
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  payments: PaymentCreateManyWithoutCustomerInput
}

input UserCreateWithoutPaymentsInput {
  email: String!
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  articles: ArticleCreateManyWithoutAuthorInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  initials_ASC
  initials_DESC
  about_ASC
  about_DESC
  image_ASC
  image_DESC
  subscribed_ASC
  subscribed_DESC
  role_ASC
  role_DESC
  postalAddress_ASC
  postalAddress_DESC
  institution_ASC
  institution_DESC
  country_ASC
  country_DESC
  personalSite_ASC
  personalSite_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role!
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  payments: PaymentUpdateManyWithoutCustomerInput
  articles: ArticleUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
}

input UserUpdateOneRequiredWithoutArticlesInput {
  create: UserCreateWithoutArticlesInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutArticlesDataInput
  upsert: UserUpsertWithoutArticlesInput
}

input UserUpdateOneRequiredWithoutPaymentsInput {
  create: UserCreateWithoutPaymentsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutPaymentsDataInput
  upsert: UserUpsertWithoutPaymentsInput
}

input UserUpdateWithoutArticlesDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  payments: PaymentUpdateManyWithoutCustomerInput
}

input UserUpdateWithoutPaymentsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean
  role: Role
  postalAddress: String
  institution: String
  country: String
  personalSite: String
  articles: ArticleUpdateManyWithoutAuthorInput
}

input UserUpsertWithoutArticlesInput {
  update: UserUpdateWithoutArticlesDataInput!
  create: UserCreateWithoutArticlesInput!
}

input UserUpsertWithoutPaymentsInput {
  update: UserUpdateWithoutPaymentsDataInput!
  create: UserCreateWithoutPaymentsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  initials: String

  """All values that are not equal to given value."""
  initials_not: String

  """All values that are contained in given list."""
  initials_in: [String!]

  """All values that are not contained in given list."""
  initials_not_in: [String!]

  """All values less than the given value."""
  initials_lt: String

  """All values less than or equal the given value."""
  initials_lte: String

  """All values greater than the given value."""
  initials_gt: String

  """All values greater than or equal the given value."""
  initials_gte: String

  """All values containing the given string."""
  initials_contains: String

  """All values not containing the given string."""
  initials_not_contains: String

  """All values starting with the given string."""
  initials_starts_with: String

  """All values not starting with the given string."""
  initials_not_starts_with: String

  """All values ending with the given string."""
  initials_ends_with: String

  """All values not ending with the given string."""
  initials_not_ends_with: String
  about: String

  """All values that are not equal to given value."""
  about_not: String

  """All values that are contained in given list."""
  about_in: [String!]

  """All values that are not contained in given list."""
  about_not_in: [String!]

  """All values less than the given value."""
  about_lt: String

  """All values less than or equal the given value."""
  about_lte: String

  """All values greater than the given value."""
  about_gt: String

  """All values greater than or equal the given value."""
  about_gte: String

  """All values containing the given string."""
  about_contains: String

  """All values not containing the given string."""
  about_not_contains: String

  """All values starting with the given string."""
  about_starts_with: String

  """All values not starting with the given string."""
  about_not_starts_with: String

  """All values ending with the given string."""
  about_ends_with: String

  """All values not ending with the given string."""
  about_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  subscribed: Boolean

  """All values that are not equal to given value."""
  subscribed_not: Boolean
  role: Role

  """All values that are not equal to given value."""
  role_not: Role

  """All values that are contained in given list."""
  role_in: [Role!]

  """All values that are not contained in given list."""
  role_not_in: [Role!]
  postalAddress: String

  """All values that are not equal to given value."""
  postalAddress_not: String

  """All values that are contained in given list."""
  postalAddress_in: [String!]

  """All values that are not contained in given list."""
  postalAddress_not_in: [String!]

  """All values less than the given value."""
  postalAddress_lt: String

  """All values less than or equal the given value."""
  postalAddress_lte: String

  """All values greater than the given value."""
  postalAddress_gt: String

  """All values greater than or equal the given value."""
  postalAddress_gte: String

  """All values containing the given string."""
  postalAddress_contains: String

  """All values not containing the given string."""
  postalAddress_not_contains: String

  """All values starting with the given string."""
  postalAddress_starts_with: String

  """All values not starting with the given string."""
  postalAddress_not_starts_with: String

  """All values ending with the given string."""
  postalAddress_ends_with: String

  """All values not ending with the given string."""
  postalAddress_not_ends_with: String
  institution: String

  """All values that are not equal to given value."""
  institution_not: String

  """All values that are contained in given list."""
  institution_in: [String!]

  """All values that are not contained in given list."""
  institution_not_in: [String!]

  """All values less than the given value."""
  institution_lt: String

  """All values less than or equal the given value."""
  institution_lte: String

  """All values greater than the given value."""
  institution_gt: String

  """All values greater than or equal the given value."""
  institution_gte: String

  """All values containing the given string."""
  institution_contains: String

  """All values not containing the given string."""
  institution_not_contains: String

  """All values starting with the given string."""
  institution_starts_with: String

  """All values not starting with the given string."""
  institution_not_starts_with: String

  """All values ending with the given string."""
  institution_ends_with: String

  """All values not ending with the given string."""
  institution_not_ends_with: String
  country: String

  """All values that are not equal to given value."""
  country_not: String

  """All values that are contained in given list."""
  country_in: [String!]

  """All values that are not contained in given list."""
  country_not_in: [String!]

  """All values less than the given value."""
  country_lt: String

  """All values less than or equal the given value."""
  country_lte: String

  """All values greater than the given value."""
  country_gt: String

  """All values greater than or equal the given value."""
  country_gte: String

  """All values containing the given string."""
  country_contains: String

  """All values not containing the given string."""
  country_not_contains: String

  """All values starting with the given string."""
  country_starts_with: String

  """All values not starting with the given string."""
  country_not_starts_with: String

  """All values ending with the given string."""
  country_ends_with: String

  """All values not ending with the given string."""
  country_not_ends_with: String
  personalSite: String

  """All values that are not equal to given value."""
  personalSite_not: String

  """All values that are contained in given list."""
  personalSite_in: [String!]

  """All values that are not contained in given list."""
  personalSite_not_in: [String!]

  """All values less than the given value."""
  personalSite_lt: String

  """All values less than or equal the given value."""
  personalSite_lte: String

  """All values greater than the given value."""
  personalSite_gt: String

  """All values greater than or equal the given value."""
  personalSite_gte: String

  """All values containing the given string."""
  personalSite_contains: String

  """All values not containing the given string."""
  personalSite_not_contains: String

  """All values starting with the given string."""
  personalSite_starts_with: String

  """All values not starting with the given string."""
  personalSite_not_starts_with: String

  """All values ending with the given string."""
  personalSite_ends_with: String

  """All values not ending with the given string."""
  personalSite_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payments_every: PaymentWhereInput
  payments_some: PaymentWhereInput
  payments_none: PaymentWhereInput
  articles_every: ArticleWhereInput
  articles_some: ArticleWhereInput
  articles_none: ArticleWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
