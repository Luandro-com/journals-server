type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  firstName: String
  lastName: String
  initials: String
  about: String
  image: String
  subscribed: Boolean @default(value: "false")
  role: Role! @default(value: "READER")
  payments: [Payment!]!
  articles: [Article!]!
  postalAddress: String 
  institution: String
  country: String
  personalSite: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum Role {
  ADMIN
  EDITOR
  READER
  AUTHOR
}

type NewsletterSubscription {
  email: String! @unique
  createdAt: DateTime!
}

type Content {
  title: String
  logo: String
  sections: [Section]
  authorGuideline: String
  description: String
  scope: String
  contact: String
  footer: String
  librarianInfo: String
  privacyStatement: String
  proofInstructions: String
  publicationFrequency: String
  purchaseArticleDescription: String
  reviewGuidelines: String
  waiverPolicy: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

enum Section {
  ISSUEBANNER
  PODCASTS
  CALLS
}

type Issue {
  id: ID! @unique
  key: String! @unique
  title: String
  volume: Int
  number: Int
  year: String
  submitedArticles: [Article!]! @relation(name: "SubmitedArticles", onDelete: SET_NULL)
  selectedArticles: [Article!]! @relation(name: "SelectedArticles", onDelete: SET_NULL)
  selectedEditorials: [Article!]! @relation(name: "EditorialArticles")
  body: String
  evaluationPeriod: Int
  publicationPrediction: DateTime
  contact: String
  publishedCall: Boolean @default(value: "false")
  published: Boolean @default(value: "false")
  startCall: DateTime!
  endCall: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Article {
  id: ID! @unique
  title: String
  resume: String
  author: User!
  shortDescription: String
  published: Boolean @default(value: "false")
  file: ArticleFile
  citations: [Citation!]!
  issue: Issue! @relation(name: "SubmitedArticles", onDelete: SET_NULL)
  selectedBy: [Issue!]! @relation(name: "SelectedArticles", onDelete: SET_NULL)
  editorial: [Issue!]! @relation(name: "EditorialArticles")
  createdAt: DateTime!
  updatedAt: DateTime!
  payment: Payment
}

type Citation {
  id: ID! @unique
  article: Article!
  text: String!
}

enum AddressType {
  BILLING
  SHIPPING
}

type Cupom {
  id: ID! @unique
  discount: Int!
  code: String!
  updatedAt: DateTime!
}

type Payment {
  id: ID! @unique
  paymentId: String
  type: String!
  currency: String
  creditCard: CreditCard
  customer: User!
  merchantOrderId: String!
  customerName: String
  article: Article!
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean @default(value: "false")
  authenticate: Boolean @default(value: "false")
  recurrent: Boolean @default(value: "false")
  receivedDate: DateTime
  cupom: Cupom
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

type CreditCard {
  id: ID! @unique
  cardNumber: String!
  holder: String!
  expirationDate: String!
  saveCard: Boolean @default(value: "false")
  brand: String!
}

type File {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
}

type ArticleFile {
  id: ID! @unique
  path: String
  filename: String!
  mimetype: String!
  encoding: String @default(value: "utf8")
  revisions: Int
  articleId: Article!
  size: Int
  originalFilename: String
}

